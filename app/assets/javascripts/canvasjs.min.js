




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>BootstrapOnRails/app/assets/javascripts/canvasjs.min.js at master Â· wtarimo/BootstrapOnRails</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="wtarimo/BootstrapOnRails" name="twitter:title" /><meta content="Contribute to BootstrapOnRails development by creating an account on GitHub." name="twitter:description" /><meta content="https://2.gravatar.com/avatar/33282d87663573c1ed279775fad15147?d=https%3A%2F%2Fidenticons.github.com%2Feaa10e988f50ad1230ef219de72b0857.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://2.gravatar.com/avatar/33282d87663573c1ed279775fad15147?d=https%3A%2F%2Fidenticons.github.com%2Feaa10e988f50ad1230ef219de72b0857.png&amp;r=x&amp;s=400" property="og:image" /><meta content="wtarimo/BootstrapOnRails" property="og:title" /><meta content="https://github.com/wtarimo/BootstrapOnRails" property="og:url" /><meta content="Contribute to BootstrapOnRails development by creating an account on GitHub." property="og:description" />

    <meta name="hostname" content="github-fe138-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87c9373a41) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="32B158AD:38FD:5209C:5320EF9B" name="octolytics-dimension-request_id" /><meta content="4673806" name="octolytics-actor-id" /><meta content="jmc27" name="octolytics-actor-login" /><meta content="85aa09eb445ee1228aabdacdcb9094a4202fa8b09536394498d0e391e427d5e0" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://github.global.ssl.fastly.net/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="nMT6hVkQJaznyZltHFVPUrDmYiGpkuPP4PkIelTqrMc=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-adcf123587b068f65ee2420a9a7988231694ba13.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-833ee98e576ecb02295720c31a3e06ed45cd542c.css" media="all" rel="stylesheet" type="text/css" />
    


      <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-9acb89add4e173259bb0e9e81d36276a93db7af4.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-7c07a7496f86ac97a4ee0c270dbe1eed4cabfd71.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="c4751110d85937292fb9f8f61f2819ed">

        <link data-pjax-transient rel='permalink' href='/wtarimo/BootstrapOnRails/blob/b4e911c45dea307c8804e26751bf8f0c072cf963/app/assets/javascripts/canvasjs.min.js'>

  <meta name="description" content="Contribute to BootstrapOnRails development by creating an account on GitHub." />

  <meta content="2916589" name="octolytics-dimension-user_id" /><meta content="wtarimo" name="octolytics-dimension-user_login" /><meta content="17687456" name="octolytics-dimension-repository_id" /><meta content="wtarimo/BootstrapOnRails" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="17687456" name="octolytics-dimension-repository_network_root_id" /><meta content="wtarimo/BootstrapOnRails" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/wtarimo/BootstrapOnRails/commits/master.atom" rel="alternate" title="Recent Commits to BootstrapOnRails:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s" data-gotokey="n">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="jmc27"
      data-repo="wtarimo/BootstrapOnRails"
      data-branch="master"
      data-sha="0201006d34259b63cb53498d1057da111ddce6d0"
  >

    <input type="hidden" name="nwo" value="wtarimo/BootstrapOnRails" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/jmc27" class="name">
        <img alt="Jonathan Chu" class=" js-avatar" data-user="4673806" height="20" src="https://avatars2.githubusercontent.com/u/4673806?s=140" width="20" /> jmc27
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <a class="tooltipped tooltipped-s" href="/logout" data-method="post" id="logout" aria-label="Sign out">
        <span class="octicon octicon-log-out"></span>
      </a>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="wtarimo/BootstrapOnRails">This repository</span>
    </li>
      <li>
        <a href="/wtarimo/BootstrapOnRails/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="nMT6hVkQJaznyZltHFVPUrDmYiGpkuPP4PkIelTqrMc=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="17687456" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/wtarimo/BootstrapOnRails/watchers">
        1
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/wtarimo/BootstrapOnRails/unstar"
      class="minibutton with-count js-toggler-target star-button starred"
      aria-label="Unstar this repository" title="Unstar wtarimo/BootstrapOnRails" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/wtarimo/BootstrapOnRails/star"
      class="minibutton with-count js-toggler-target star-button unstarred"
      aria-label="Star this repository" title="Star wtarimo/BootstrapOnRails" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/wtarimo/BootstrapOnRails/stargazers">
        0
      </a>
  </div>

  </li>


        <li>
          <a href="/wtarimo/BootstrapOnRails/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of wtarimo/BootstrapOnRails to your account" aria-label="Fork your own copy of wtarimo/BootstrapOnRails to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/wtarimo/BootstrapOnRails/network" class="social-count">0</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/wtarimo" class="url fn" itemprop="url" rel="author"><span itemprop="title">wtarimo</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/wtarimo/BootstrapOnRails" class="js-current-repository js-repo-home-link">BootstrapOnRails</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/wtarimo/BootstrapOnRails" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /wtarimo/BootstrapOnRails">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/wtarimo/BootstrapOnRails/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /wtarimo/BootstrapOnRails/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/wtarimo/BootstrapOnRails/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /wtarimo/BootstrapOnRails/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/wtarimo/BootstrapOnRails/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /wtarimo/BootstrapOnRails/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/wtarimo/BootstrapOnRails/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /wtarimo/BootstrapOnRails/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/wtarimo/BootstrapOnRails/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /wtarimo/BootstrapOnRails/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/wtarimo/BootstrapOnRails/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /wtarimo/BootstrapOnRails/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/wtarimo/BootstrapOnRails.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/wtarimo/BootstrapOnRails.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:wtarimo/BootstrapOnRails.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:wtarimo/BootstrapOnRails.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/wtarimo/BootstrapOnRails" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/wtarimo/BootstrapOnRails" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/wtarimo/BootstrapOnRails" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save wtarimo/BootstrapOnRails to your computer and use it in GitHub Desktop." aria-label="Save wtarimo/BootstrapOnRails to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/wtarimo/BootstrapOnRails/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download wtarimo/BootstrapOnRails as a zip file"
                   title="Download wtarimo/BootstrapOnRails as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:7412528ca51a8d7bcf727434295da4e6 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/wtarimo/BootstrapOnRails/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/wtarimo/BootstrapOnRails/blob/master/app/assets/javascripts/canvasjs.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/wtarimo/BootstrapOnRails" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">BootstrapOnRails</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/wtarimo/BootstrapOnRails/tree/master/app" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">app</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/wtarimo/BootstrapOnRails/tree/master/app/assets" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">assets</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/wtarimo/BootstrapOnRails/tree/master/app/assets/javascripts" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">javascripts</span></a></span><span class="separator"> / </span><strong class="final-path">canvasjs.min.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="app/assets/javascripts/canvasjs.min.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/wtarimo/BootstrapOnRails/contributors/master/app/assets/javascripts/canvasjs.min.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>354 lines (352 sloc)</span>
          <span class="meta-divider"></span>
        <span>176.032 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w js-conduit-openfile-check"
               href="http://mac.github.com"
               data-url="github-mac://openRepo/https://github.com/wtarimo/BootstrapOnRails?branch=master&amp;filepath=app%2Fassets%2Fjavascripts%2Fcanvasjs.min.js"
               aria-label="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/wtarimo/BootstrapOnRails/edit/master/app/assets/javascripts/canvasjs.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/wtarimo/BootstrapOnRails/raw/master/app/assets/javascripts/canvasjs.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/wtarimo/BootstrapOnRails/blame/master/app/assets/javascripts/canvasjs.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/wtarimo/BootstrapOnRails/commits/master/app/assets/javascripts/canvasjs.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/wtarimo/BootstrapOnRails/delete/master/app/assets/javascripts/canvasjs.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>
<span id="L251" rel="#L251">251</span>
<span id="L252" rel="#L252">252</span>
<span id="L253" rel="#L253">253</span>
<span id="L254" rel="#L254">254</span>
<span id="L255" rel="#L255">255</span>
<span id="L256" rel="#L256">256</span>
<span id="L257" rel="#L257">257</span>
<span id="L258" rel="#L258">258</span>
<span id="L259" rel="#L259">259</span>
<span id="L260" rel="#L260">260</span>
<span id="L261" rel="#L261">261</span>
<span id="L262" rel="#L262">262</span>
<span id="L263" rel="#L263">263</span>
<span id="L264" rel="#L264">264</span>
<span id="L265" rel="#L265">265</span>
<span id="L266" rel="#L266">266</span>
<span id="L267" rel="#L267">267</span>
<span id="L268" rel="#L268">268</span>
<span id="L269" rel="#L269">269</span>
<span id="L270" rel="#L270">270</span>
<span id="L271" rel="#L271">271</span>
<span id="L272" rel="#L272">272</span>
<span id="L273" rel="#L273">273</span>
<span id="L274" rel="#L274">274</span>
<span id="L275" rel="#L275">275</span>
<span id="L276" rel="#L276">276</span>
<span id="L277" rel="#L277">277</span>
<span id="L278" rel="#L278">278</span>
<span id="L279" rel="#L279">279</span>
<span id="L280" rel="#L280">280</span>
<span id="L281" rel="#L281">281</span>
<span id="L282" rel="#L282">282</span>
<span id="L283" rel="#L283">283</span>
<span id="L284" rel="#L284">284</span>
<span id="L285" rel="#L285">285</span>
<span id="L286" rel="#L286">286</span>
<span id="L287" rel="#L287">287</span>
<span id="L288" rel="#L288">288</span>
<span id="L289" rel="#L289">289</span>
<span id="L290" rel="#L290">290</span>
<span id="L291" rel="#L291">291</span>
<span id="L292" rel="#L292">292</span>
<span id="L293" rel="#L293">293</span>
<span id="L294" rel="#L294">294</span>
<span id="L295" rel="#L295">295</span>
<span id="L296" rel="#L296">296</span>
<span id="L297" rel="#L297">297</span>
<span id="L298" rel="#L298">298</span>
<span id="L299" rel="#L299">299</span>
<span id="L300" rel="#L300">300</span>
<span id="L301" rel="#L301">301</span>
<span id="L302" rel="#L302">302</span>
<span id="L303" rel="#L303">303</span>
<span id="L304" rel="#L304">304</span>
<span id="L305" rel="#L305">305</span>
<span id="L306" rel="#L306">306</span>
<span id="L307" rel="#L307">307</span>
<span id="L308" rel="#L308">308</span>
<span id="L309" rel="#L309">309</span>
<span id="L310" rel="#L310">310</span>
<span id="L311" rel="#L311">311</span>
<span id="L312" rel="#L312">312</span>
<span id="L313" rel="#L313">313</span>
<span id="L314" rel="#L314">314</span>
<span id="L315" rel="#L315">315</span>
<span id="L316" rel="#L316">316</span>
<span id="L317" rel="#L317">317</span>
<span id="L318" rel="#L318">318</span>
<span id="L319" rel="#L319">319</span>
<span id="L320" rel="#L320">320</span>
<span id="L321" rel="#L321">321</span>
<span id="L322" rel="#L322">322</span>
<span id="L323" rel="#L323">323</span>
<span id="L324" rel="#L324">324</span>
<span id="L325" rel="#L325">325</span>
<span id="L326" rel="#L326">326</span>
<span id="L327" rel="#L327">327</span>
<span id="L328" rel="#L328">328</span>
<span id="L329" rel="#L329">329</span>
<span id="L330" rel="#L330">330</span>
<span id="L331" rel="#L331">331</span>
<span id="L332" rel="#L332">332</span>
<span id="L333" rel="#L333">333</span>
<span id="L334" rel="#L334">334</span>
<span id="L335" rel="#L335">335</span>
<span id="L336" rel="#L336">336</span>
<span id="L337" rel="#L337">337</span>
<span id="L338" rel="#L338">338</span>
<span id="L339" rel="#L339">339</span>
<span id="L340" rel="#L340">340</span>
<span id="L341" rel="#L341">341</span>
<span id="L342" rel="#L342">342</span>
<span id="L343" rel="#L343">343</span>
<span id="L344" rel="#L344">344</span>
<span id="L345" rel="#L345">345</span>
<span id="L346" rel="#L346">346</span>
<span id="L347" rel="#L347">347</span>
<span id="L348" rel="#L348">348</span>
<span id="L349" rel="#L349">349</span>
<span id="L350" rel="#L350">350</span>
<span id="L351" rel="#L351">351</span>
<span id="L352" rel="#L352">352</span>
<span id="L353" rel="#L353">353</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> CanvasJS HTML5 &amp; JavaScript Charts - v1.4.0 Beta 2 - http://canvasjs.com/ </span></div><div class='line' id='LC3'><span class="cm"> Copyright 2013 fenopix</span></div><div class='line' id='LC4'><span class="cm">*/</span></div><div class='line' id='LC5'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">ua</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){}</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ia</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;millisecond&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;second&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;minute&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;hour&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;day&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;week&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="mi">7</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;month&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;year&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setFullYear</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">+</span></div><div class='line' id='LC6'><span class="mi">1</span><span class="o">*</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">x</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Duration&quot;</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">*=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s\s*/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/\s/</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="o">--</span><span class="nx">b</span><span class="p">)););</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">va</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">roundRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="p">){</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">p</span><span class="p">);</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">5</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span></div><div class='line' id='LC7'><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">wa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">16711680</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">16</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">65280</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC8'><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;normal&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;_&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;_&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">ka</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;position:absolute; left:0px; top:-20000px; padding:0px;margin:0px;border:none;white-space:pre;line-height:normal;font-family:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;; font-size:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px; font-weight:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">O</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">O</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;Mpgyi&quot;</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">O</span><span class="p">)}</span><span class="nx">O</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="mf">1.1</span><span class="o">*</span></div><div class='line' id='LC9'><span class="nx">c</span><span class="p">)}</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">ka</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">||!</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=!</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)});</span><span class="k">else</span> <span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">*=</span><span class="nx">P</span><span class="p">;</span><span class="nx">c</span><span class="o">*=</span><span class="nx">P</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">).</span><span class="nx">data</span><span class="p">;</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">4</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">4</span><span class="p">]</span><span class="o">|</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">8</span><span class="p">]</span><span class="o">|</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">12</span><span class="p">]){</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="mi">16</span><span class="o">|</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;&lt;</span></div><div class='line' id='LC10'><span class="mi">8</span><span class="o">|</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;FontStyle&quot;</span><span class="o">:</span><span class="s2">&quot;fontStyle&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;FontWeight&quot;</span><span class="o">:</span><span class="s2">&quot;fontWeight&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;FontSize&quot;</span><span class="o">:</span><span class="s2">&quot;fontSize&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;FontFamily&quot;</span><span class="o">:</span><span class="s2">&quot;fontFamily&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">+=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="o">!</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;&#39;&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s1">&#39;&quot;&#39;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;&#39;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">d</span><span class="o">+=</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">na</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">Y</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">webkitBackingStorePixelRatio</span><span class="o">||</span></div><div class='line' id='LC11'><span class="nx">d</span><span class="p">.</span><span class="nx">mozBackingStorePixelRatio</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">msBackingStorePixelRatio</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">oBackingStorePixelRatio</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">backingStorePixelRatio</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="nx">P</span><span class="o">=</span><span class="nx">ba</span><span class="o">/</span><span class="nx">Y</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">P</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">P</span><span class="p">;</span><span class="nx">ba</span><span class="o">!==</span><span class="nx">Y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">P</span><span class="p">,</span><span class="nx">P</span><span class="p">))}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;canvasjs-chart-canvas&quot;</span><span class="p">);</span><span class="nx">X</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">u</span><span class="o">||</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">G_vmlCanvasManager</span><span class="o">||</span><span class="nx">G_vmlCanvasManager</span><span class="p">.</span><span class="nx">initElement</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_defaultsKey</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">ca</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">ca</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">])</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC12'><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">ca</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="nx">w</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;Chart&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">theme</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">theme</span><span class="o">:</span><span class="s2">&quot;theme1&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_containerId</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_objectsInitialized</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_panTimerId</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTouchEventType</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_defaultCursor</span><span class="o">=</span><span class="s2">&quot;default&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="o">=</span><span class="p">{</span><span class="nx">canvas</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">_dataInRenderedOrder</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_containerId</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span></div><div class='line' id='LC13'><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">height</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;canvasjs-chart-container&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="nx">u</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">);</span></div><div class='line' id='LC14'><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">;</span><span class="nx">va</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">);</span><span class="nx">u</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;plotAreaCanvas&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">canvas</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span></div><div class='line' id='LC15'><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="o">=</span><span class="k">new</span> <span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;canvasjs-chart-toolbar&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span></div><div class='line' id='LC16'><span class="s2">&quot;0px&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;button&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;Pan&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">),</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">.</span><span class="nx">zoomText</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">.</span><span class="nx">panText</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">render</span><span class="p">()}));</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_resetButton</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;button&quot;</span><span class="p">),</span></div><div class='line' id='LC17'><span class="k">this</span><span class="p">.</span><span class="nx">_resetButton</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;Reset&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_resetButton</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_defaultCursor</span><span class="p">,</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_resetButton</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">.</span><span class="nx">panText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_defaultCursor</span><span class="o">=</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_defaultCursor</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC18'><span class="nx">b</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetOverlayedCanvas</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">render</span><span class="p">()}));</span><span class="nx">K</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">height</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">?</span></div><div class='line' id='LC19'><span class="nx">b</span><span class="p">.</span><span class="nx">_container</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="nx">a</span><span class="o">*</span><span class="nx">P</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="nx">c</span><span class="o">*</span><span class="nx">P</span><span class="p">)</span><span class="nx">X</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">X</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">X</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCanvas</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">render</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">};</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span></div><div class='line' id='LC20'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="o">?</span><span class="s2">&quot;MSPointerDown&quot;</span><span class="o">:</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_touchEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="o">?</span><span class="s2">&quot;MSPointerMove&quot;</span><span class="o">:</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_touchEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="o">?</span><span class="s2">&quot;MSPointerUp&quot;</span><span class="o">:</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_touchEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="o">?</span></div><div class='line' id='LC21'><span class="s2">&quot;MSPointerCancel&quot;</span><span class="o">:</span><span class="s2">&quot;touchcancel&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_touchEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">toolTip</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">theme</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">layoutManager</span><span class="o">=</span><span class="k">new</span> <span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">creditText</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">creditHref</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;canvasjs-chart-credit&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="s2">&quot;outline:none;margin:0px;position:absolute;right:3px;top:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">14</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px;color:dimgrey;text-decoration:none;font-size:10px;font-family:Lucida Grande, Lucida Sans Unicode, Arial, sans-serif&quot;</span><span class="p">),</span></div><div class='line' id='LC22'><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">creditHref</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">creditText</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;target&quot;</span><span class="p">,</span><span class="s2">&quot;_blank&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_creditLink</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="o">=</span><span class="p">{</span><span class="nx">axisX</span><span class="o">:</span><span class="p">{</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">axisY</span><span class="o">:</span><span class="p">{</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">axisY2</span><span class="o">:</span><span class="p">{</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="kc">null</span><span class="p">}}}}</span><span class="k">else</span> <span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;CanvasJS Error: Chart Container with id &quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC23'><span class="k">this</span><span class="p">.</span><span class="nx">_containerId</span><span class="o">+</span><span class="s1">&#39;&quot; was not found&#39;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="o">/</span><span class="mi">3</span><span class="p">};</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="o">/</span><span class="mi">3</span><span class="p">};</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_rightOccupied</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_leftOccupied</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_bottomOccupied</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_topOccupied</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC24'><span class="s2">&quot;TextBlock&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrappedText</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontWeight</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">U</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;Title&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">theme</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getAutoFontSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="kc">null</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">$</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;Legend&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span></div><div class='line' id='LC25'><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">orientation</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalSpacing</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">dataSeries</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getAutoFontSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontWeight</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">da</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span></div><div class='line' id='LC26'><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">N</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;DataSeries&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">noDataPointsInPlotArea</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDefaultAxisPlacement</span><span class="p">();</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getAutoFontSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="p">))}</span></div><div class='line' id='LC27'><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">z</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;Axis&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">theme</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="o">=</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">max</span><span class="o">:-</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">viewPortMin</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">viewPortMax</span><span class="o">:-</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">minDiff</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">};</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">interval</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="kc">null</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisY</span><span class="o">:</span></div><div class='line' id='LC28'><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getAutoFontSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">));</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getAutoFontSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="s2">&quot;axisX&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">||</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">gridThickness</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gridThickness</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">%</span><span class="mi">360</span><span class="o">+</span><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="p">;</span><span class="mi">90</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC29'><span class="mi">270</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">-=</span><span class="mi">180</span><span class="o">:</span><span class="mi">180</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">&amp;&amp;</span><span class="mi">270</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">-=</span><span class="mi">180</span><span class="o">:</span><span class="mi">270</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">&amp;&amp;</span><span class="mi">360</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">-=</span><span class="mi">360</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">stripLines</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">ea</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">theme</span><span class="p">,</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">_absoluteMaximum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_absoluteMinimum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">hasOptionChanged</span><span class="p">(</span><span class="s2">&quot;minimum&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC30'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hasOptionChanged</span><span class="p">(</span><span class="s2">&quot;maximum&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">trackChanges</span><span class="p">(</span><span class="s2">&quot;minimum&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">trackChanges</span><span class="p">(</span><span class="s2">&quot;maximum&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">ea</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;StripLine&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="o">=</span><span class="s2">&quot;pixel&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">startValue</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">endValue</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">startValue</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">startValue</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">startValue</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endValue</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">endValue</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">endValue</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">thickness</span><span class="o">=</span></div><div class='line' id='LC31'><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endValue</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startValue</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="o">=</span><span class="s2">&quot;value&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;ToolTip&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentSeriesIndex</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_timerId</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevX</span><span class="o">=</span><span class="kc">NaN</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_initialize</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">objectMap</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">rectangularRegionEventSubscriptions</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">previousDataPointEventObject</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCanvas</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span></div><div class='line' id='LC32'><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="o">=</span><span class="p">[]}</span><span class="kd">function</span> <span class="nx">pa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">fa</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">fa</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">U</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;CultureInfo&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">theme</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">}</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=!!</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">).</span><span class="nx">getContext</span><span class="p">,</span><span class="nx">qa</span><span class="o">=</span><span class="p">{</span><span class="nx">Chart</span><span class="o">:</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">400</span><span class="p">,</span><span class="nx">zoomEnabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">theme</span><span class="o">:</span><span class="s2">&quot;theme1&quot;</span><span class="p">,</span><span class="nx">animationEnabled</span><span class="o">:</span><span class="nx">u</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">colorSet</span><span class="o">:</span><span class="s2">&quot;colorSet1&quot;</span><span class="p">,</span><span class="nx">culture</span><span class="o">:</span><span class="s2">&quot;en&quot;</span><span class="p">,</span><span class="nx">creditHref</span><span class="o">:</span><span class="s2">&quot;http://canvasjs.com/&quot;</span><span class="p">,</span><span class="nx">creditText</span><span class="o">:</span><span class="s2">&quot;CanvasJS.com&quot;</span><span class="p">},</span><span class="nx">Title</span><span class="o">:</span><span class="p">{</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC33'><span class="nx">text</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="s2">&quot;Calibri&quot;</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">cornerRadius</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">5</span><span class="p">},</span><span class="nx">Legend</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">14</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">itemmouseover</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">itemmouseout</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">itemmousemove</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">itemclick</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">ToolTip</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC34'><span class="nx">shared</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">animationEnabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">Axis</span><span class="o">:</span><span class="p">{</span><span class="nx">minimum</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">maximum</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">interval</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">intervalType</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">titleFontColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">titleFontSize</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">titleFontFamily</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">,</span><span class="nx">titleFontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">titleFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">labelAngle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">labelFontFamily</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">,</span><span class="nx">labelFontColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">labelFontSize</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">labelFontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">labelFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">labelAutoFit</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">labelWrap</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">labelMaxWidth</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">prefix</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">suffix</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">includeZero</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tickLength</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">tickColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">tickThickness</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span></div><div class='line' id='LC35'><span class="nx">lineThickness</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">gridColor</span><span class="o">:</span><span class="s2">&quot;A0A0A0&quot;</span><span class="p">,</span><span class="nx">gridThickness</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">interlacedColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">valueFormatString</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">stripLines</span><span class="o">:</span><span class="p">[]},</span><span class="nx">StripLine</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">startValue</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">endValue</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;orange&quot;</span><span class="p">,</span><span class="nx">thickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">labelBackgroundColor</span><span class="o">:</span><span class="s2">&quot;#EEEEEE&quot;</span><span class="p">,</span><span class="nx">labelFontFamily</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">,</span><span class="nx">labelFontColor</span><span class="o">:</span><span class="s2">&quot;orange&quot;</span><span class="p">,</span><span class="nx">labelFontSize</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">labelFontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">labelFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">},</span><span class="nx">DataSeries</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">dataPoints</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">bevelEnabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">indexLabel</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">indexLabelPlacement</span><span class="o">:</span><span class="s2">&quot;outside&quot;</span><span class="p">,</span><span class="nx">indexLabelOrientation</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="p">,</span></div><div class='line' id='LC36'><span class="nx">indexLabelFontColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">indexLabelFontSize</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">indexLabelFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">indexLabelFontFamily</span><span class="o">:</span><span class="s2">&quot;Arial&quot;</span><span class="p">,</span><span class="nx">indexLabelFontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">indexLabelBackgroundColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">indexLabelLineColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">indexLabelLineThickness</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">indexLabelMaxWidth</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">indexLabelWrap</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">lineThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">startAngle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;column&quot;</span><span class="p">,</span><span class="nx">xValueType</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="p">,</span><span class="nx">axisYType</span><span class="o">:</span><span class="s2">&quot;primary&quot;</span><span class="p">,</span><span class="nx">xValueFormatString</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">yValueFormatString</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">showInLegend</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">legendMarkerType</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">legendMarkerColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">legendText</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">markerType</span><span class="o">:</span><span class="s2">&quot;circle&quot;</span><span class="p">,</span></div><div class='line' id='LC37'><span class="nx">markerColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">markerSize</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">markerBorderColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">markerBorderThickness</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">mouseover</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">visible</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">CultureInfo</span><span class="o">:</span><span class="p">{</span><span class="nx">decimalSeparator</span><span class="o">:</span><span class="s2">&quot;.&quot;</span><span class="p">,</span><span class="nx">digitGroupSeparator</span><span class="o">:</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">zoomText</span><span class="o">:</span><span class="s2">&quot;Zoom&quot;</span><span class="p">,</span><span class="nx">panText</span><span class="o">:</span><span class="s2">&quot;Pan&quot;</span><span class="p">,</span><span class="nx">resetText</span><span class="o">:</span><span class="s2">&quot;Reset&quot;</span><span class="p">,</span><span class="nx">days</span><span class="o">:</span><span class="s2">&quot;Sunday Monday Tuesday Wednesday Thursday Friday Saturday&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">shortDays</span><span class="o">:</span><span class="s2">&quot;Sun Mon Tue Wed Thu Fri Sat&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">months</span><span class="o">:</span><span class="s2">&quot;January February March April May June July August September October November December&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span></div><div class='line' id='LC38'><span class="nx">shortMonths</span><span class="o">:</span><span class="s2">&quot;Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)},</span><span class="nx">TextBlock</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">cornerRadius</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}},</span><span class="nx">fa</span><span class="o">=</span><span class="p">{</span><span class="nx">en</span><span class="o">:</span><span class="p">{}},</span><span class="nx">V</span><span class="o">=</span><span class="p">{</span><span class="nx">colorSet1</span><span class="o">:</span><span class="s2">&quot;#369EAD #C24642 #7F6084 #86B402 #A2D1CF #C8B631 #6DBCEB #52514E #4F81BC #A064A1 #F79647&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span></div><div class='line' id='LC39'><span class="nx">colorSet2</span><span class="o">:</span><span class="s2">&quot;#4F81BC #C0504E #9BBB58 #23BFAA #8064A1 #4AACC5 #F79647 #33558B&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">colorSet3</span><span class="o">:</span><span class="s2">&quot;#8CA1BC #36845C #017E82 #8CB9D0 #708C98 #94838D #F08891 #0366A7 #008276 #EE7757 #E5BA3A #F2990B #03557B #782970&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)},</span><span class="nx">ca</span><span class="o">=</span><span class="p">{</span><span class="nx">theme1</span><span class="o">:</span><span class="p">{</span><span class="nx">Chart</span><span class="o">:</span><span class="p">{</span><span class="nx">colorSet</span><span class="o">:</span><span class="nx">V</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">Title</span><span class="o">:</span><span class="p">{</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Calibri, Optima, Candara, Verdana, Geneva, sans-serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="s2">&quot;#3A3A3A&quot;</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">10</span><span class="p">},</span><span class="nx">Axis</span><span class="o">:</span><span class="p">{</span><span class="nx">titleFontSize</span><span class="o">:</span><span class="mi">26</span><span class="p">,</span><span class="nx">titleFontColor</span><span class="o">:</span><span class="s2">&quot;#666666&quot;</span><span class="p">,</span><span class="nx">titleFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Calibri, Optima, Candara, Verdana, Geneva, sans-serif&quot;</span><span class="o">:</span></div><div class='line' id='LC40'><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">labelFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Calibri, Optima, Candara, Verdana, Geneva, sans-serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">labelFontSize</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">labelFontColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">tickColor</span><span class="o">:</span><span class="s2">&quot;#BBBBBB&quot;</span><span class="p">,</span><span class="nx">tickThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">gridThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">gridColor</span><span class="o">:</span><span class="s2">&quot;#BBBBBB&quot;</span><span class="p">,</span><span class="nx">lineThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;#BBBBBB&quot;</span><span class="p">},</span><span class="nx">Legend</span><span class="o">:</span><span class="p">{</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;monospace, sans-serif,arial black&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">},</span><span class="nx">DataSeries</span><span class="o">:</span><span class="p">{</span><span class="nx">indexLabelFontColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">indexLabelFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Calibri, Optima, Candara, Verdana, Geneva, sans-serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">indexLabelFontSize</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span></div><div class='line' id='LC41'><span class="nx">indexLabelLineThickness</span><span class="o">:</span><span class="mi">1</span><span class="p">}},</span><span class="nx">theme2</span><span class="o">:</span><span class="p">{</span><span class="nx">Chart</span><span class="o">:</span><span class="p">{</span><span class="nx">colorSet</span><span class="o">:</span><span class="s2">&quot;colorSet2&quot;</span><span class="p">},</span><span class="nx">Title</span><span class="o">:</span><span class="p">{</span><span class="nx">fontFamily</span><span class="o">:</span><span class="s2">&quot;impact, charcoal, arial black, sans-serif&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="s2">&quot;#333333&quot;</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">10</span><span class="p">},</span><span class="nx">Axis</span><span class="o">:</span><span class="p">{</span><span class="nx">titleFontSize</span><span class="o">:</span><span class="mi">22</span><span class="p">,</span><span class="nx">titleFontColor</span><span class="o">:</span><span class="s2">&quot;rgb(98,98,98)&quot;</span><span class="p">,</span><span class="nx">titleFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;monospace, sans-serif,arial black&quot;</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">,</span><span class="nx">titleFontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="nx">labelFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;monospace, Courier New, Courier&quot;</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">,</span><span class="nx">labelFontSize</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">labelFontColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">labelFontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="nx">tickColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">tickThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">gridThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">gridColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span></div><div class='line' id='LC42'><span class="nx">lineThickness</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">Legend</span><span class="o">:</span><span class="p">{</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;monospace, sans-serif,arial black&quot;</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">},</span><span class="nx">DataSeries</span><span class="o">:</span><span class="p">{</span><span class="nx">indexLabelFontColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">indexLabelFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Courier New, Courier, monospace&quot;</span><span class="o">:</span><span class="s2">&quot;arial&quot;</span><span class="p">,</span><span class="nx">indexLabelFontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="nx">indexLabelFontSize</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">indexLabelLineThickness</span><span class="o">:</span><span class="mi">1</span><span class="p">}},</span><span class="nx">theme3</span><span class="o">:</span><span class="p">{</span><span class="nx">Chart</span><span class="o">:</span><span class="p">{</span><span class="nx">colorSet</span><span class="o">:</span><span class="s2">&quot;colorSet1&quot;</span><span class="p">},</span><span class="nx">Title</span><span class="o">:</span><span class="p">{</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Candara, Optima, Trebuchet MS, Helvetica Neue, Helvetica, Trebuchet MS, serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="s2">&quot;#3A3A3A&quot;</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span></div><div class='line' id='LC43'><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">10</span><span class="p">},</span><span class="nx">Axis</span><span class="o">:</span><span class="p">{</span><span class="nx">titleFontSize</span><span class="o">:</span><span class="mi">22</span><span class="p">,</span><span class="nx">titleFontColor</span><span class="o">:</span><span class="s2">&quot;rgb(98,98,98)&quot;</span><span class="p">,</span><span class="nx">titleFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Verdana, Geneva, Calibri, sans-serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">labelFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Calibri, Optima, Candara, Verdana, Geneva, sans-serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">labelFontSize</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">labelFontColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">tickColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">tickThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">gridThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">gridColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">lineThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">},</span><span class="nx">Legend</span><span class="o">:</span><span class="p">{</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;monospace, sans-serif,arial black&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">},</span><span class="nx">DataSeries</span><span class="o">:</span><span class="p">{</span><span class="nx">bevelEnabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC44'><span class="nx">indexLabelFontColor</span><span class="o">:</span><span class="s2">&quot;grey&quot;</span><span class="p">,</span><span class="nx">indexLabelFontFamily</span><span class="o">:</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;Candara, Optima, Calibri, Verdana, Geneva, sans-serif&quot;</span><span class="o">:</span><span class="s2">&quot;calibri&quot;</span><span class="p">,</span><span class="nx">indexLabelFontSize</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">indexLabelLineColor</span><span class="o">:</span><span class="s2">&quot;lightgrey&quot;</span><span class="p">,</span><span class="nx">indexLabelLineThickness</span><span class="o">:</span><span class="mi">2</span><span class="p">}}},</span><span class="nx">x</span><span class="o">=</span><span class="p">{</span><span class="nx">numberDuration</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">yearDuration</span><span class="o">:</span><span class="mi">314496</span><span class="nx">E5</span><span class="p">,</span><span class="nx">monthDuration</span><span class="o">:</span><span class="mi">2592</span><span class="nx">E6</span><span class="p">,</span><span class="nx">weekDuration</span><span class="o">:</span><span class="mi">6048</span><span class="nx">E5</span><span class="p">,</span><span class="nx">dayDuration</span><span class="o">:</span><span class="mi">864</span><span class="nx">E5</span><span class="p">,</span><span class="nx">hourDuration</span><span class="o">:</span><span class="mi">36</span><span class="nx">E5</span><span class="p">,</span><span class="nx">minuteDuration</span><span class="o">:</span><span class="mi">6</span><span class="nx">E4</span><span class="p">,</span><span class="nx">secondDuration</span><span class="o">:</span><span class="mi">1</span><span class="nx">E3</span><span class="p">,</span><span class="nx">millisecondDuration</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">dayOfWeekFromInt</span><span class="o">:</span><span class="s2">&quot;Sunday Monday Tuesday Wednesday Thursday Friday Saturday&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)},</span><span class="nx">ka</span><span class="o">=</span><span class="p">{},</span><span class="nx">O</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="sr">/D{1,4}|M{1,4}|Y{1,4}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|f{1,3}|t{1,2}|T{1,2}|K|z{1,3}|&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;/g</span><span class="p">,</span></div><div class='line' id='LC45'><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;Sunday Monday Tuesday Wednesday Thursday Friday Saturday&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;Sun Mon Tue Wed Thu Fri Sat&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;January February March April May June July August September October November December&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="sr">/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/[^-+\dA-Z]/g</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">days</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">months</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">shortDays</span><span class="o">:</span></div><div class='line' id='LC46'><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">shortMonths</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">k</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nb">Date</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span><span class="k">throw</span> <span class="nx">SyntaxError</span><span class="p">(</span><span class="s2">&quot;invalid date&quot;</span><span class="p">);</span><span class="s2">&quot;UTC:&quot;</span><span class="o">===</span><span class="nx">p</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="nx">q</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="s2">&quot;getUTC&quot;</span><span class="o">:</span><span class="s2">&quot;get&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Date&quot;</span><span class="p">](),</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Day&quot;</span><span class="p">](),</span><span class="nx">v</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Month&quot;</span><span class="p">](),</span><span class="nx">u</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;FullYear&quot;</span><span class="p">](),</span><span class="nx">w</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Hours&quot;</span><span class="p">](),</span><span class="nx">C</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Minutes&quot;</span><span class="p">](),</span><span class="nx">y</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Seconds&quot;</span><span class="p">](),</span><span class="nx">E</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Milliseconds&quot;</span><span class="p">](),</span><span class="nx">x</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">();</span><span class="k">return</span> <span class="nx">m</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;D&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">s</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;DD&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;DDD&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">l</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;DDDD&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">v</span><span class="o">+</span></div><div class='line' id='LC47'><span class="mi">1</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;MM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">v</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;MMM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">n</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;MMMM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">r</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;Y&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">u</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">));</span><span class="k">case</span> <span class="s2">&quot;YY&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">u</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">),</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;YYY&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">u</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">),</span><span class="mi">3</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;YYYY&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="mi">4</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;h&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">w</span><span class="o">%</span><span class="mi">12</span><span class="o">||</span><span class="mi">12</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;hh&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">w</span><span class="o">%</span><span class="mi">12</span><span class="o">||</span><span class="mi">12</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;H&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">w</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;HH&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">C</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;mm&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">y</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ss&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;f&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;ff&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;fff&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC48'><span class="mi">3</span><span class="p">),</span><span class="mi">3</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;t&quot;</span><span class="o">:</span><span class="k">return</span> <span class="mi">12</span><span class="o">&gt;</span><span class="nx">w</span><span class="o">?</span><span class="s2">&quot;a&quot;</span><span class="o">:</span><span class="s2">&quot;p&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;tt&quot;</span><span class="o">:</span><span class="k">return</span> <span class="mi">12</span><span class="o">&gt;</span><span class="nx">w</span><span class="o">?</span><span class="s2">&quot;am&quot;</span><span class="o">:</span><span class="s2">&quot;pm&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;T&quot;</span><span class="o">:</span><span class="k">return</span> <span class="mi">12</span><span class="o">&gt;</span><span class="nx">w</span><span class="o">?</span><span class="s2">&quot;A&quot;</span><span class="o">:</span><span class="s2">&quot;P&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;TT&quot;</span><span class="o">:</span><span class="k">return</span> <span class="mi">12</span><span class="o">&gt;</span><span class="nx">w</span><span class="o">?</span><span class="s2">&quot;AM&quot;</span><span class="o">:</span><span class="s2">&quot;PM&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;K&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">q</span><span class="o">?</span><span class="s2">&quot;UTC&quot;</span><span class="o">:</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">k</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">]).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;z&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">x</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;+&quot;</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="mi">60</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;zz&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">x</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;+&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">G</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="mi">60</span><span class="p">),</span><span class="mi">2</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;zzz&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">x</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;+&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">G</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="mi">60</span><span class="p">),</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nx">G</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">%</span><span class="mi">60</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)}})}}(),</span><span class="nx">ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC49'><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">*=-</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">decimalSeparator</span><span class="o">:</span><span class="s2">&quot;.&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">digitGroupSeparator</span><span class="o">:</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[eE][+-]*[0]+|[,]+[.]|\u2030|./g</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="s2">&quot;.&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">)</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;%&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="nx">f</span><span class="o">*=</span><span class="mi">100</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;\u2030&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">*=</span><span class="mi">1</span><span class="nx">E3</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;.&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]){</span><span class="nx">f</span><span class="o">/=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="k">else</span><span class="s2">&quot;E&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;e&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">q</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">p</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="s2">&quot;#&quot;</span><span class="o">===</span></div><div class='line' id='LC50'><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">r</span><span class="o">++:</span><span class="s2">&quot;,&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="s2">&quot;#&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;0&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="o">||</span><span class="nx">l</span><span class="o">++</span><span class="p">)}</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nb">String</span><span class="p">(</span><span class="nx">c</span><span class="p">)).</span><span class="nx">length</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">f</span><span class="o">/=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">s</span><span class="p">));</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="nx">f</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="o">=</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="s2">&quot;#&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">++</span><span class="p">,</span><span class="nx">p</span><span class="o">===</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span><span class="p">(</span><span class="nx">u</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;)</span><span class="nx">u</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="s2">&quot;0&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">--</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">b</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">pop</span><span class="p">()</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">t</span><span class="o">++</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">%</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">()</span><span class="o">+</span></div><div class='line' id='LC51'><span class="nx">b</span><span class="p">,</span><span class="nx">l</span><span class="o">++</span><span class="p">,</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">l</span><span class="o">++</span><span class="p">,</span><span class="nx">t</span><span class="o">++</span><span class="p">),</span><span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">%</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span><span class="s2">&quot;E&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;e&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||!</span><span class="sr">/[eE][+-]*[0]+/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;,&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="o">++</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s1">&#39;&quot;&#39;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&#39;&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&#39;&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;+&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[0]+/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)}));</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="s2">&quot;#&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nb">Number</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">?</span><span class="nx">b</span><span class="o">+=</span></div><div class='line' id='LC52'><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++?</span><span class="nx">e</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++?</span><span class="nx">e</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;0&quot;</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s1">&#39;&quot;&#39;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&#39;&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&#39;&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="nx">b</span><span class="o">+=</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++?</span><span class="nx">e</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;E&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;e&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||!</span><span class="sr">/[eE][+-]*[0]+/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">+=</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++?</span><span class="nx">e</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;+&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[0]+/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)}));</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">sa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetX</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetX</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetX</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetY</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">layerX</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span></div><div class='line' id='LC53'><span class="nx">a</span><span class="p">.</span><span class="nx">layerX</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">layerX</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">layerY</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">}},</span><span class="nx">na</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">ba</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="nx">na</span><span class="o">?</span><span class="nx">ba</span><span class="o">/</span><span class="nx">Y</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">I</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setOptions</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">qa</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_defaultsKey</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">qa</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_defaultsKey</span><span class="p">],</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]}};</span><span class="nx">I</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trackChanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="o">=</span><span class="p">{});</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">I</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isBeingTracked</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="o">||</span></div><div class='line' id='LC54'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="o">=</span><span class="p">{});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">};</span><span class="nx">I</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOptionChanged</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="o">=</span><span class="p">{});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">_oldOptions</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">M</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">V</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">colorSet</span><span class="p">]</span><span class="o">?</span><span class="nx">V</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">colorSet</span><span class="p">]</span><span class="o">:</span><span class="nx">V</span><span class="p">.</span><span class="nx">colorSet1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_dataInRenderedOrder</span><span class="o">=</span></div><div class='line' id='LC55'><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_events</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">reset</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="o">=</span><span class="p">{</span><span class="nx">axisPlacement</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">axisXValueType</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">plotTypes</span><span class="o">:</span><span class="p">[]};</span><span class="k">this</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">reset</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="o">=</span><span class="k">new</span> <span class="nx">pa</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">culture</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">++</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">type</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">w</span><span class="p">.</span><span class="nx">_supportedChartTypes</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">type</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">N</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">theme</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="p">);</span><span class="kc">null</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;DataSeries &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC56'><span class="kc">null</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="mi">1</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_colorSet</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="o">%</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">]],</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="o">%</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">])</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">_colorSet</span><span class="o">=</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectedColorSet</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">_colorSet</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">];</span><span class="kc">null</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span></div><div class='line' id='LC57'><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoints</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">16</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">=</span><span class="mi">8</span><span class="p">);</span><span class="s2">&quot;bubble&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;scatter&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoints</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">wa</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39;You cannot combine &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39;&quot; with bar chart&#39;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39;You cannot combine &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39;&quot; with pie chart&#39;</span><span class="o">:</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">=</span><span class="s2">&quot;normal&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span></div><div class='line' id='LC58'><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39;You cannot combine &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39;&quot; with line, area, column or pie chart&#39;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39;You cannot combine &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39;&quot; with pie chart&#39;</span><span class="o">:</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">=</span><span class="s2">&quot;xySwapped&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39;You cannot combine &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39;&quot; with line, area, column or bar chart&#39;</span><span class="o">:</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39;You cannot combine &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39;&quot; with bar chart&#39;</span><span class="o">:</span><span class="kc">null</span><span class="o">===</span></div><div class='line' id='LC59'><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span><span class="p">}}</span><span class="k">this</span><span class="p">.</span><span class="nx">_objectsInitialized</span><span class="o">=!</span><span class="mi">0</span><span class="p">};</span><span class="nx">w</span><span class="p">.</span><span class="nx">_supportedChartTypes</span><span class="o">=</span><span class="s2">&quot;line stepLine spline column area stepArea splineArea bar bubble scatter stackedColumn stackedColumn100 stackedBar stackedBar100 stackedArea stackedArea100 pie doughnut&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">w</span><span class="p">.</span><span class="nx">_supportedChartTypes</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">||</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">_supportedChartTypes</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span></div><div class='line' id='LC60'><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">});</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_initialize</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">||</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">axisYType</span><span class="o">&amp;&amp;</span><span class="s2">&quot;primary&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">axisYType</span><span class="o">?</span><span class="s2">&quot;secondary&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">axisYType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="o">=</span><span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">,</span><span class="s2">&quot;axisY&quot;</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="o">=</span></div><div class='line' id='LC61'><span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">,</span><span class="s2">&quot;axisY&quot;</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="p">))),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">axisY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">=</span><span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisY</span><span class="p">,</span><span class="s2">&quot;axisY&quot;</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">=</span><span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisY</span><span class="p">,</span><span class="s2">&quot;axisY&quot;</span><span class="p">,</span><span class="s2">&quot;bottom&quot;</span><span class="p">))),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">axisY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">=</span><span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">,</span><span class="s2">&quot;axisX&quot;</span><span class="p">,</span><span class="s2">&quot;bottom&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">=</span><span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC62'><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">,</span><span class="s2">&quot;axisX&quot;</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">))),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">axisX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_processData</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">title</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_title</span><span class="o">=</span><span class="k">new</span> <span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">title</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_title</span><span class="p">.</span><span class="nx">render</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">legend</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">theme</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">showInLegend</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">||</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">(),</span><span class="nx">z</span><span class="p">.</span><span class="nx">setLayoutAndRender</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">,</span></div><div class='line' id='LC63'><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">());</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">preparePlotArea</span><span class="p">();</span><span class="k">else</span> <span class="k">return</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderLine</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStepLine</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderSpline</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderColumn</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBar</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span></div><div class='line' id='LC64'><span class="k">this</span><span class="p">.</span><span class="nx">renderArea</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStepArea</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderSplineArea</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStackedColumn</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStackedColumn100</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStackedBar</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStackedBar100</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStackedArea</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderStackedArea100</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBubble</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderScatter</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC65'><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">renderPie</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderPie</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_dataInRenderedOrder</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">e</span><span class="p">]])}</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderIndexLabels</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">attachPlotAreaEventHandlers</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">||</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">_updateToolTip</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">renderCount</span><span class="o">++</span><span class="p">};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">attachPlotAreaEventHandlers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">({</span><span class="nx">context</span><span class="o">:</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC66'><span class="nx">chart</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">mousedown</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_plotAreaMouseDown</span><span class="p">,</span><span class="nx">mouseup</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_plotAreaMouseUp</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_plotAreaMouseMove</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">?</span><span class="s2">&quot;col-resize&quot;</span><span class="o">:</span><span class="s2">&quot;move&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">?</span><span class="s2">&quot;move&quot;</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">capture</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">bounds</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">})};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">categoriseDataSeries</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPoints</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">w</span><span class="p">.</span><span class="nx">_supportedChartTypes</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span></div><div class='line' id='LC67'><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">totalDataSeries</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">plotUnits</span><span class="o">:</span><span class="p">[]},</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">axisYType</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisYType</span><span class="p">){</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">previousDataSeriesCount</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">plotType</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">axisYType</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisYType</span><span class="p">,</span><span class="nx">axisY</span><span class="o">:</span><span class="s2">&quot;primary&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisYType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">,</span><span class="nx">axisX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">,</span><span class="nx">dataSeriesIndexes</span><span class="o">:</span><span class="p">[]},</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">totalDataSeries</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC68'><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">previousDataSeriesCount</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">+=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">assignIdToDataPoints</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=++</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="p">}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_processData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">assignIdToDataPoints</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">categoriseDataSeries</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC69'><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">plotTypes</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_processMultiseriesPlotUnit</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_processStackedPlotUnit</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">!==</span></div><div class='line' id='LC70'><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_processStacked100PlotUnit</span><span class="p">(</span><span class="nx">d</span><span class="p">)}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_processMultiseriesPlotUnit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">f</span><span class="p">]],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="nx">k</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">||</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="nx">k</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC71'><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:-</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">||</span><span class="s2">&quot;dateTime&quot;</span><span class="o">===</span><span class="nx">k</span><span class="p">.</span><span class="nx">xValueType</span><span class="p">)</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="o">=</span><span class="nx">p</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">())</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">x</span><span class="p">;</span></div><div class='line' id='LC72'><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">y</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">*=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">=</span><span class="nx">n</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">)</span><span class="o">||</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">)){</span><span class="nx">p</span><span class="o">-=</span><span class="mi">2</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">label</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">label</span><span class="p">);</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">e</span><span class="p">)}}</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisXValueType</span><span class="o">=</span></div><div class='line' id='LC73'><span class="nx">k</span><span class="p">.</span><span class="nx">xValueType</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;dateTime&quot;</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="p">}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_processStackedPlotUnit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">p</span><span class="p">]],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">||</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">?</span></div><div class='line' id='LC74'><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:-</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">||</span><span class="s2">&quot;dateTime&quot;</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">xValueType</span><span class="p">)</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">())</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC75'><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">*=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">=</span><span class="nx">s</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">)){</span><span class="nx">g</span><span class="o">-=</span><span class="mi">2</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">q</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">)</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">label</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">label</span><span class="p">);</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">e</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="o">:</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">?</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="p">}}</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisXValueType</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">xValueType</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;dateTime&quot;</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span></div><div class='line' id='LC76'><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">a</span><span class="p">)));</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">k</span><span class="p">)</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">a</span><span class="p">)))}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_processStacked100PlotUnit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC77'><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">m</span><span class="p">]],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">||</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:-</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">||</span></div><div class='line' id='LC78'><span class="s2">&quot;dateTime&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">xValueType</span><span class="p">)</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="o">=</span><span class="nx">r</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">())</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">y</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">*=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">=</span><span class="nx">t</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">)</span><span class="o">||</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">)){</span><span class="nx">r</span><span class="o">-=</span><span class="mi">2</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">)</span><span class="nx">n</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">label</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">label</span><span class="p">);</span></div><div class='line' id='LC79'><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">e</span><span class="o">?</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">?</span><span class="nx">p</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisXValueType</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">xValueType</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;dateTime&quot;</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="p">}</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="mi">99</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="mi">99</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">=-</span><span class="mi">99</span><span class="p">)</span><span class="o">:!</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">=-</span><span class="mi">99</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="o">=</span><span class="nx">p</span><span class="p">}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDataPointAtXY</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_dataInRenderedOrder</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">;(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_dataInRenderedOrder</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getDataPointAtXY</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC80'><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;markerSize&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">)</span><span class="o">||</span><span class="mi">8</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">distance</span><span class="o">&lt;=</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">){</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;line&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepLine&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;area&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepArea&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">distance</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getObjectAtXY</span><span class="o">=</span></div><div class='line' id='LC81'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDataPointAtXY</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">||!</span><span class="mi">1</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">id</span><span class="p">)}</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getAutoFontSize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">/=</span><span class="mi">400</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">)};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">resetOverlayedCanvas</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">=</span></div><div class='line' id='LC82'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_events</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_touchEventHandler</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">changedTouches</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">changedTouches</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;touchstart&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;MSPointerDown&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;touchmove&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;MSPointerMove&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;mousemove&quot;</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;touchend&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;MSPointerUp&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;touchstart&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTouchEventType</span><span class="o">||</span><span class="s2">&quot;MSPointerDown&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTouchEventType</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;mouseup&quot;</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTouchEventType</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC83'><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;MouseEvent&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">initMouseEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nb">window</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">screenX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">screenY</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientY</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventManipulation</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventManipulation</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()}}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventManipulation</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventManipulation</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span></div><div class='line' id='LC84'><span class="nx">e</span><span class="o">=</span><span class="mi">3</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">2</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">capturedEventParam</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">capturedEventParam</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">capturedEventParam</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">releaseCapture</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">releaseCapture</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_events</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_events</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_events</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_events</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;=</span><span class="nx">h</span><span class="p">.</span><span class="nx">x1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;=</span><span class="nx">h</span><span class="p">.</span><span class="nx">x2</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y1</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC85'><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y2</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="s2">&quot;mousedown&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">capture</span><span class="o">?</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">capturedEventParam</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">setCapture</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">setCapture</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;mouseup&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">releaseCapture</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvas</span><span class="p">.</span><span class="nx">releaseCapture</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseEventHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">));</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">cursor</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">cursor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_defaultCursor</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC86'><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x1</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x2</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y1</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">hide</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">isDrag</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">mouseEventHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_plotAreaMouseDown</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">isDrag</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">xMinimum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">,</span><span class="nx">xMaximum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_plotAreaMouseUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">||</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC87'><span class="k">this</span><span class="p">.</span><span class="nx">isDrag</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="nx">c</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="p">)</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMinimum</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMinimum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">+=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">+=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">&gt;</span></div><div class='line' id='LC88'><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMaximum</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMaximum</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">-=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">-=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">resetOverlayedCanvas</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="mi">1</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span></div><div class='line' id='LC89'><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">min</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">max</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">)</span><span class="o">&gt;=</span><span class="mf">0.008</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">())))</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span></div><div class='line' id='LC90'><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">min</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">max</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">)</span><span class="o">&gt;=</span><span class="mf">0.01</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">())))}</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">&amp;&amp;</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;inline&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomButton</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span></div><div class='line' id='LC91'><span class="k">this</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">.</span><span class="nx">panText</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_resetButton</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">.</span><span class="nx">resetText</span><span class="p">)}}</span><span class="k">this</span><span class="p">.</span><span class="nx">isDrag</span><span class="o">=!</span><span class="mi">1</span><span class="p">};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_plotAreaMouseMove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isDrag</span><span class="o">&amp;&amp;</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">;</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nx">b</span><span class="p">);</span><span class="mi">2</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">||</span></div><div class='line' id='LC92'><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">hide</span><span class="p">()</span><span class="o">:!</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">mouseMoveHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panEnabled</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">xMinimum</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">xMaximum</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMinimum</span><span class="o">-</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMinimum</span><span class="o">-</span></div><div class='line' id='LC93'><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">)</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">+=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">+=</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMaximum</span><span class="o">+</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">_absoluteMaximum</span><span class="o">+</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">-=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">-=</span></div><div class='line' id='LC94'><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_panTimerId</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_panTimerId</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">resetOverlayedCanvas</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="s2">&quot;#A0ABB8&quot;</span><span class="p">,</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span></div><div class='line' id='LC95'><span class="nx">b</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dragStartPoint</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">y1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">mouseMoveHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">preparePlotArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY2</span><span class="p">;</span><span class="o">!</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">:</span></div><div class='line' id='LC96'><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">u</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span></div><div class='line' id='LC97'><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">))};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnPlotArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">y</span><span class="p">}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderIndexLabels</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;indexLabelFontColor&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">ma</span><span class="p">(</span><span class="s2">&quot;indexLabel&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span></div><div class='line' id='LC98'><span class="k">this</span><span class="p">.</span><span class="nx">replaceKeywordsWithValue</span><span class="p">(</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;indexLabel&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">k</span><span class="p">).</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;indexLabelFontSize&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;indexLabelPlacement&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;indexLabelOrientation&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">x1</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">x2</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y1</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span></div><div class='line' id='LC99'><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartType</span><span class="o">?</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">x2</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="p">(</span><span class="s2">&quot;outside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;inside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="s2">&quot;horizontal&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">p</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="nx">n</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">n</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">l</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">5</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;vertical&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">n</span><span class="o">-</span><span class="mi">5</span><span class="p">),</span><span class="nx">l</span><span class="p">),</span><span class="nx">f</span><span class="o">=-</span><span class="mi">90</span><span class="p">))</span><span class="o">:</span></div><div class='line' id='LC100'><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;outside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x2</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;inside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">x2</span><span class="p">),</span><span class="s2">&quot;horizontal&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">s</span><span class="o">-</span><span class="nx">p</span><span class="p">),</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">p</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;vertical&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">p</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">s</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">q</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">s</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="o">=-</span><span class="mi">90</span><span class="p">)))</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">p</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span></div><div class='line' id='LC101'><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;vertical&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="nx">p</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="nx">f</span><span class="o">=-</span><span class="mi">90</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">())}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderLine</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span></div><div class='line' id='LC102'><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">};</span><span class="nx">p</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">lineThickness</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()),</span></div><div class='line' id='LC103'><span class="nx">n</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="nx">m</span><span class="o">||</span><span class="nx">n</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">)),</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC104'><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="o">%</span><span class="mi">500</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">))));</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span></div><div class='line' id='LC105'><span class="nx">f</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;line&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">p</span><span class="p">})}</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStepLine</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span></div><div class='line' id='LC106'><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">};</span><span class="nx">p</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">lineThickness</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()),</span></div><div class='line' id='LC107'><span class="nx">n</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="nx">m</span><span class="o">||</span><span class="nx">n</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">)),</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span></div><div class='line' id='LC108'><span class="nx">q</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="o">%</span><span class="mi">500</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">))));</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span></div><div class='line' id='LC109'><span class="nx">f</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stepLine&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">p</span><span class="p">})}</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderSpline</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">3</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span></div><div class='line' id='LC110'><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">%</span><span class="mi">3</span><span class="nx">E3</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">)));</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">;</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span></div><div class='line' id='LC111'><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">};</span><span class="nx">m</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">lineThickness</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="p">[]);</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span></div><div class='line' id='LC112'><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="nx">n</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span></div><div class='line' id='LC113'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;spline&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">l</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">m</span><span class="p">})}</span><span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">()}};</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">15</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">15</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">-</span><span class="nx">b</span><span class="o">?</span><span class="mi">8</span><span class="o">:</span><span class="mf">0.35</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC114'><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">((</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">,(</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;rgba(255, 255, 255, .4)&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">());</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">((</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">,(</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span></div><div class='line' id='LC115'><span class="s2">&quot;rgba(255, 255, 255, .4)&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">());</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="p">,(</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">,(</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;rgba(255, 255, 255, 0.1)&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">());</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">,(</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">d</span><span class="p">,(</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span></div><div class='line' id='LC116'><span class="s2">&quot;rgba(255, 255, 255, 0.1)&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;rgba(255, 255, 255, 0.1)&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">())};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderColumn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span></div><div class='line' id='LC117'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">totalDataSeries</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">:</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span></div><div class='line' id='LC118'><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">5</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">bevelEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span></div><div class='line' id='LC119'><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">totalDataSeries</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousDataSeriesCount</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">s</span><span class="o">=</span><span class="nx">p</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">p</span><span class="p">);</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">e</span><span class="o">%</span><span class="nx">r</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">s</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;column&quot;</span><span class="p">,</span></div><div class='line' id='LC120'><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">s</span><span class="p">},</span><span class="nx">bounds</span><span class="o">:</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">x2</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStackedColumn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span></div><div class='line' id='LC121'><span class="nx">g</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span></div><div class='line' id='LC122'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">5</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">bevelEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#4572A7 &quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span></div><div class='line' id='LC123'><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">*</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">-=</span><span class="nx">B</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">p</span><span class="o">-</span><span class="nx">B</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="o">-</span><span class="nx">k</span><span class="p">)}</span><span class="k">else</span> <span class="nx">B</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="nx">B</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="nx">B</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="o">-</span><span class="nx">k</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">f</span><span class="o">%</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">v</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span></div><div class='line' id='LC124'><span class="nx">t</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);(</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stackedColumn&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">v</span><span class="p">},</span><span class="nx">bounds</span><span class="o">:</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">x2</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">)},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStackedColumn100</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span></div><div class='line' id='LC125'><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span></div><div class='line' id='LC126'><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">5</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">bevelEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span></div><div class='line' id='LC127'><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">((</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">*</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">-=</span><span class="nx">B</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">p</span><span class="o">-</span><span class="nx">B</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="o">-</span><span class="nx">k</span><span class="p">)}</span><span class="k">else</span> <span class="nx">B</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="nx">B</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="nx">B</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="o">-</span><span class="nx">k</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">f</span><span class="o">%</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC128'><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">v</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);(</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">v</span><span class="p">},</span><span class="nx">bounds</span><span class="o">:</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">x2</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">)},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderBar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC129'><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">totalDataSeries</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">:</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC130'><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">5</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">bevelEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#4572A7 &quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC131'><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">totalDataSeries</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousDataSeriesCount</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">s</span><span class="o">=</span><span class="nx">p</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">p</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">e</span><span class="o">%</span><span class="nx">r</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span></div><div class='line' id='LC132'><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">q</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;bar&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">f</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">bounds</span><span class="o">:</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">y1</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">y2</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStackedBar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC133'><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC134'><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">5</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">bevelEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#4572A7 &quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC135'><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">*</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="nx">B</span><span class="p">;</span><span class="nx">k</span><span class="o">+=</span><span class="nx">B</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">v</span><span class="p">)}</span><span class="k">else</span> <span class="nx">B</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">k</span><span class="o">-</span><span class="nx">B</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="o">-</span><span class="nx">B</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">v</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">f</span><span class="o">%</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span></div><div class='line' id='LC136'><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">t</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stackedBar&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">bounds</span><span class="o">:</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">y1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">y2</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStackedBar100</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span></div><div class='line' id='LC137'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="kc">Infinity</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span></div><div class='line' id='LC138'><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">5</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">bevelEnabled</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#4572A7 &quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC139'><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">((</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotType</span><span class="p">.</span><span class="nx">plotUnits</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">*</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="nx">B</span><span class="p">;</span><span class="nx">k</span><span class="o">+=</span><span class="nx">B</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">v</span><span class="p">)}</span><span class="k">else</span> <span class="nx">B</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">k</span><span class="o">-</span><span class="nx">B</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="o">-</span><span class="nx">B</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC140'><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">v</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">f</span><span class="o">%</span><span class="nx">l</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">t</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stackedBar100&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">bounds</span><span class="o">:</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">y1</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">y2</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span></div><div class='line' id='LC141'><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">v</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">fill</span><span class="p">()),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">B</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span></div><div class='line' id='LC142'><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">};</span><span class="nx">f</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span></div><div class='line' id='LC143'><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">l</span><span class="o">%</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="nx">c</span><span class="p">(),</span><span class="nx">C</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">s</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span></div><div class='line' id='LC144'><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">||</span><span class="nx">C</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">B</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">)),</span><span class="nx">C</span><span class="o">=</span><span class="nx">r</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">l</span><span class="o">%</span><span class="mi">250</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">());</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">q</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">)){</span><span class="nx">s</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span></div><div class='line' id='LC145'><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">y</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;area&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">w</span><span class="p">})}</span><span class="nx">c</span><span class="p">();</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">f</span><span class="p">)}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderSplineArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">oa</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span></div><div class='line' id='LC146'><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">3</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">);</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">s</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">fill</span><span class="p">())}}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC147'><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">};</span><span class="nx">f</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span></div><div class='line' id='LC148'><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">color</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">r</span><span class="o">%</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">color</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">(),</span><span class="nx">v</span><span class="o">=</span><span class="p">[]);</span><span class="k">else</span><span class="p">{</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span></div><div class='line' id='LC149'><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">n</span><span class="p">};</span><span class="nx">v</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">n</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">w</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span></div><div class='line' id='LC150'><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">B</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">w</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">w</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">w</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;splineArea&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">n</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">color</span><span class="p">})}</span><span class="nx">c</span><span class="p">();</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">f</span><span class="p">)}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStepArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">v</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC151'><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">fill</span><span class="p">()),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span></div><div class='line' id='LC152'><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">};</span><span class="nx">f</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">l</span><span class="o">%</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">s</span><span class="o">&lt;</span></div><div class='line' id='LC153'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="nx">c</span><span class="p">(),</span><span class="nx">x</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">s</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">||</span><span class="nx">x</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">)),</span><span class="nx">x</span><span class="o">=</span><span class="nx">r</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span></div><div class='line' id='LC154'><span class="nx">q</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">l</span><span class="o">%</span><span class="mi">250</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="nx">v</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">)),</span><span class="nx">w</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">}));</span><span class="nx">y</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">q</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">)){</span><span class="nx">s</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span></div><div class='line' id='LC155'><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">y</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stepArea&quot;</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">C</span><span class="p">})}}</span><span class="nx">c</span><span class="p">();</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">f</span><span class="p">)}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span></div><div class='line' id='LC156'><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStackedArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">;</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="nx">xValuePresent</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span></div><div class='line' id='LC157'><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">s</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">s</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">xValuePresent</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">xValuePresent</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">ja</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">t</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">n</span><span class="p">};</span><span class="nx">k</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC158'><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="nx">s</span><span class="p">[</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]]</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">w</span><span class="p">.</span><span class="nx">y</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">-=</span><span class="nx">x</span><span class="p">;</span><span class="nx">v</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nx">x</span><span class="p">});</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="o">-</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span></div><div class='line' id='LC159'><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">)),</span><span class="nx">t</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">k</span><span class="o">%</span><span class="mi">250</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">y</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">));</span><span class="nx">v</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nx">x</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">x1</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">m</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span></div><div class='line' id='LC160'><span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">w</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">w</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">q</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">q</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">markerColor</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">markerColor</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">markerColor</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">w</span><span class="p">.</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">q</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stackedArea&quot;</span><span class="p">,</span></div><div class='line' id='LC161'><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">m</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">C</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">))}</span><span class="k">delete</span> <span class="nx">q</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">}</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStackedArea100</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span></div><div class='line' id='LC162'><span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="nx">xValuePresent</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span></div><div class='line' id='LC163'><span class="nx">v</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">v</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">xValuePresent</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">xValuePresent</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">ja</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">w</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataSeries&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">s</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="mi">1</span><span class="o">==</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">?</span><span class="nx">n</span><span class="o">=</span><span class="mi">1</span><span class="o">:</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">k</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="nx">v</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]]</span><span class="o">:</span></div><div class='line' id='LC164'><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">C</span><span class="p">.</span><span class="nx">y</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPointYSums</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">m</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">-=</span><span class="nx">y</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nx">y</span><span class="p">});</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="o">-</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span></div><div class='line' id='LC165'><span class="nx">m</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">)),</span><span class="nx">w</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">k</span><span class="o">%</span><span class="mi">250</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">y</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">));</span><span class="nx">x</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nx">y</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">z</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">z</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">x1</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">m</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC166'><span class="mi">0</span><span class="o">!==</span><span class="nx">C</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nx">markerColor</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">markerColor</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">markerColor</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">})}(</span><span class="nx">C</span><span class="p">.</span><span class="nx">indexLabel</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">indexLabel</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_indexLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">chartType</span><span class="o">:</span><span class="s2">&quot;stackedArea100&quot;</span><span class="p">,</span></div><div class='line' id='LC167'><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">m</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">E</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">))}</span><span class="k">delete</span> <span class="nx">t</span><span class="p">.</span><span class="nx">dataPointIndexes</span><span class="p">}</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderBubble</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span></div><div class='line' id='LC168'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=-</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">||</span></div><div class='line' id='LC169'><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">z</span><span class="o">||</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">z</span><span class="p">,</span><span class="nx">q</span><span class="o">&gt;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="p">),</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">q</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">25</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mf">0.25</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="mi">1</span><span class="o">==</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">),</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">:</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#4572A7 &quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span></div><div class='line' id='LC170'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">z</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">((</span><span class="nx">s</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">p</span><span class="o">-</span><span class="nx">m</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">m</span><span class="p">))</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarker</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">l</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span></div><div class='line' id='LC171'><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">t</span><span class="p">};</span><span class="nx">t</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">v</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarker</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderScatter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span></div><div class='line' id='LC172'><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mf">0.15</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="mi">1</span><span class="o">==</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">:</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#4572A7 &quot;</span><span class="p">;</span></div><div class='line' id='LC173'><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mf">0.3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getTime</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">||</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">reference</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span></div><div class='line' id='LC174'><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarker</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">thickness</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">||</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">maxWidthInX</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="p">);</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">((</span><span class="nx">l</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="nx">f</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="nx">f</span><span class="p">))</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">f</span><span class="p">},</span><span class="nx">l</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarker</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">,</span></div><div class='line' id='LC175'><span class="nx">q</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">)}}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="kd">var</span> <span class="nx">ha</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">())</span><span class="o">:</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mf">0.6</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">());</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">()};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderPie</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">=</span></div><div class='line' id='LC176'><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">y</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;dataPoint&quot;</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabel</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabel</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabel</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabel</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">label</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">label</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">label</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">label</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">center</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">};</span><span class="nx">l</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">radius</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelText</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">replaceKeywordsWithValue</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="p">;</span></div><div class='line' id='LC177'><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelLineColor</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelLineColor</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelLineColor</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelLineColor</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelLineColor</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">b</span><span class="o">%</span><span class="nx">g</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelLineThickness</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelLineThickness</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelLineThickness</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelLineThickness</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontColor</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontColor</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontColor</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelFontColor</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontStyle</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontStyle</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontStyle</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelFontStyle</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontWeight</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontWeight</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontWeight</span><span class="o">:</span></div><div class='line' id='LC178'><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelFontWeight</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontFamily</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontFamily</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelFontFamily</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelFontFamily</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelBackgroundColor</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelBackgroundColor</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelBackgroundColor</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelBackgroundColor</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelBackgroundColor</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelMaxWidth</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelMaxWidth</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelMaxWidth</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelMaxWidth</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelMaxWidth</span><span class="o">:</span><span class="mf">0.33</span><span class="o">*</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelWrap</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelWrap</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexLabelWrap</span><span class="o">:</span></div><div class='line' id='LC179'><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelWrap</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">:</span><span class="mi">0</span><span class="o">:</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">endAngle</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">=</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">%</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">a</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">startAngle</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">%</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">x</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">x</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="nx">t</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">}</span><span class="nx">l</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">=</span><span class="nx">h</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;=</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">?</span></div><div class='line' id='LC180'><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">fontSize</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontFamily</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontStyle</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontWeight</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelBackgroundColor</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelMaxWidth</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelWrap</span><span class="o">?</span><span class="mi">5</span><span class="o">*</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelFontSize</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelText</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">});</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">()}</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span></div><div class='line' id='LC181'><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">t</span><span class="p">[(</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">%</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">));</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">t</span><span class="p">[(</span><span class="nx">f</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">%</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">&lt;=</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">){</span><span class="mi">0</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">prevMaxAngle</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">startAngle</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">prevMaxAngle</span><span class="o">+</span></div><div class='line' id='LC182'><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">startAngle</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">endAngle</span><span class="o">-</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">startAngle</span><span class="p">),</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">b</span><span class="o">%</span><span class="nx">g</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">ha</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">center</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">radius</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">++</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">prevMaxAngle</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">requestAnimFrame</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">u</span><span class="o">?</span><span class="mi">15</span><span class="o">:</span><span class="mi">4</span><span class="p">),</span><span class="nx">e</span><span class="p">())}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">startAngle</span><span class="p">,</span></div><div class='line' id='LC183'><span class="nx">c</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">endAngle</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mf">0.07</span><span class="o">*</span><span class="nx">E</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">midAngle</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mf">0.07</span><span class="o">*</span><span class="nx">E</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">midAngle</span><span class="p">),</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">exploded</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">d</span><span class="p">))</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">d</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">)</span><span class="o">||</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">f</span><span class="p">))</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">f</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">))</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">d</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="nx">f</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">d</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">)</span><span class="o">||</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">f</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">))</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="nx">d</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">.</span><span class="nx">y</span><span class="o">-=</span><span class="nx">f</span><span class="o">/</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="o">=</span></div><div class='line' id='LC184'><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoint</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">_toolTip</span><span class="p">.</span><span class="nx">highlightObjects</span><span class="p">([</span><span class="nx">d</span><span class="p">]));</span><span class="nx">ha</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">center</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">radius</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">a</span><span class="o">%</span><span class="nx">g</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">++</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="s2">&quot;black&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;grey&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineJoin</span><span class="o">=</span><span class="s2">&quot;round&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelText</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="s2">&quot;outside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="o">?-</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">l</span><span class="p">)</span><span class="o">:-</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span></div><div class='line' id='LC185'><span class="mi">2</span><span class="o">:</span><span class="s2">&quot;outside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="o">?</span><span class="nx">l</span><span class="o">:-</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;outside&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelLineColor</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelLineThickness</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span></div><div class='line' id='LC186'><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?-</span><span class="nx">l</span><span class="o">:</span><span class="nx">l</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineJoin</span><span class="o">=</span><span class="s2">&quot;miter&quot;</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">requestAnimFrame</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="o">:</span><span class="nx">c</span><span class="o">-</span><span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC187'><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">!==</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">hemisphere</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">indexLabelText</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">?</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="p">)))</span><span class="k">break</span><span class="p">;</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="nx">z</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">z</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span></div><div class='line' id='LC188'><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=-</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">l</span><span class="p">)))</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">l</span><span class="o">-</span><span class="nx">e</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">l</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="nx">n</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span></div><div class='line' id='LC189'><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">n</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">m</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">acos</span><span class="p">(</span><span class="nx">E</span><span class="o">/</span><span class="nx">z</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">acos</span><span class="p">((</span><span class="nx">z</span><span class="o">*</span><span class="nx">z</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="nx">E</span><span class="o">-</span><span class="nx">m</span><span class="o">*</span><span class="nx">m</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">E</span><span class="o">*</span><span class="nx">z</span><span class="p">));</span><span class="nx">l</span><span class="o">=</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">n</span><span class="o">?</span><span class="nx">l</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">!==</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">hemisphere</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">indexLabelText</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">===</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">?</span><span class="nx">t</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="nx">t</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="p">)))</span><span class="k">break</span><span class="p">;</span></div><div class='line' id='LC190'><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="kc">null</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=-</span><span class="nx">l</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">l</span><span class="o">-</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=-</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&gt;+</span><span class="nx">d</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">v</span><span class="o">?-</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">v</span><span class="p">)</span><span class="o">:-</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">))))))</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="nx">m</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="kc">null</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">l</span><span class="o">-</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&lt;+</span><span class="nx">d</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC191'><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">v</span><span class="o">?</span><span class="nx">l</span><span class="o">-</span><span class="nx">v</span><span class="o">:</span><span class="nx">n</span><span class="o">-</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">e</span><span class="p">)))));</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">x</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="mi">15</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">n</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="mi">15</span><span class="p">))</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&gt;</span></div><div class='line' id='LC192'><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">midAngle</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="mi">15</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">n</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="mi">15</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelAngle</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="p">))}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span></div><div class='line' id='LC193'><span class="s2">&quot;grey&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;grey&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="s2">&quot;16px Arial&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">E</span><span class="o">-=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;outside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="p">){</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="o">*</span><span class="nx">w</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">z</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">z</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelAngle</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">radius</span><span class="o">=</span><span class="nx">E</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">x</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="nx">x</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">-</span><span class="nx">v</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">D</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">)</span><span class="nx">A</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">[</span><span class="nx">A</span><span class="p">].</span><span class="nx">hemisphere</span><span class="o">===</span></div><div class='line' id='LC194'><span class="nx">p</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">A</span><span class="p">].</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="nx">q</span><span class="o">++:</span><span class="nx">s</span><span class="o">++</span><span class="p">);</span><span class="nx">A</span><span class="o">=</span><span class="nx">D</span><span class="o">/</span><span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="nx">s</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">s</span><span class="p">;</span><span class="nx">q</span><span class="o">=-</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="o">-</span><span class="nx">A</span><span class="p">);</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">p</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">A</span><span class="p">),</span><span class="nx">q</span><span class="o">=-</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="o">-</span><span class="nx">s</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="o">+</span><span class="nx">F</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&lt;+</span><span class="nx">q</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;+</span><span class="nx">s</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&lt;=+</span><span class="nx">A</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">F</span><span class="p">)))</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">A</span><span class="p">),</span><span class="nx">q</span><span class="o">=-</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="o">-</span><span class="nx">s</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="o">+</span><span class="nx">F</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&lt;+</span><span class="nx">q</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;+</span><span class="nx">s</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&lt;=+</span><span class="nx">A</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="o">-</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">F</span><span class="p">)))}}}}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="mf">0.7</span><span class="o">*</span><span class="nx">E</span><span class="o">:</span><span class="mf">0.8</span><span class="o">*</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">z</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">),</span><span class="nx">A</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">z</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">midAngle</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">D</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span></div><div class='line' id='LC195'><span class="nx">A</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="nx">D</span><span class="o">=</span><span class="nx">D</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">p</span><span class="p">.</span><span class="nx">hemisphere</span><span class="o">?</span><span class="p">(</span><span class="nx">D</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">l</span><span class="p">),</span><span class="nx">D</span><span class="o">*=-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">D</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">l</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">E</span><span class="o">||</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">E</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="o">/=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelAngle</span><span class="p">)),</span><span class="mi">9</span><span class="o">&lt;</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="o">*=</span><span class="mf">0.3</span><span class="p">),</span><span class="nx">D</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">D</span><span class="p">)),</span><span class="nx">D</span><span class="o">=</span><span class="nx">D</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelAngle</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelAngle</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">?</span></div><div class='line' id='LC196'><span class="p">(</span><span class="nx">D</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="nx">D</span><span class="o">*=-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">D</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">y1</span><span class="o">-</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="mi">5</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="o">/=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">indexLabelAngle</span><span class="p">)),</span><span class="mi">9</span><span class="o">&lt;</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="o">*=</span><span class="mf">0.3</span><span class="p">),</span><span class="nx">D</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">D</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="nx">b</span><span class="o">!==</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelText</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexLabelTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">();</span></div><div class='line' id='LC197'><span class="k">else</span> <span class="k">break</span><span class="p">};</span><span class="nx">x</span><span class="o">=</span><span class="nx">p</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">A</span><span class="p">],</span><span class="nx">q</span><span class="p">.</span><span class="nx">indexLabelText</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="kc">null</span><span class="o">!==</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="nx">D</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">D</span><span class="o">?</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">A</span><span class="p">),</span><span class="nx">G</span><span class="o">!==</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">G</span><span class="p">),</span><span class="nx">F</span><span class="o">+=-</span><span class="nx">D</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">x</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="nx">p</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">))}</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">x</span><span class="p">)}</span><span class="nx">c</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">animationEnabled</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">renderCount</span><span class="o">?</span><span class="nx">u</span><span class="o">?</span><span class="mi">60</span><span class="o">:</span><span class="mi">30</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndexes</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">frame</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxFrames</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">t</span><span class="o">=</span><span class="p">[],</span><span class="nx">v</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="mf">1.3</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="mi">20</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">x2</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">y2</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">y1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;inside&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexLabelPlacement</span><span class="o">?</span></div><div class='line' id='LC198'><span class="mf">0.95</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="mf">0.8</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="o">*</span><span class="nx">w</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pieDoughnutClickHandler</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">frame</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">maxFrames</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">exploded</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">exploded</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="nx">u</span><span class="o">?</span><span class="mi">15</span><span class="o">:</span><span class="mi">4</span><span class="p">),</span><span class="mi">1</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">())};</span><span class="nx">b</span><span class="p">();</span><span class="nx">p</span><span class="p">()}};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">requestAnimFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">webkitRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">mozRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">oRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">msRequestAnimationFrame</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="nx">E3</span><span class="o">/</span><span class="mi">60</span><span class="p">)}}();</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">registerSpace</span><span class="o">=</span></div><div class='line' id='LC199'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_topOccupied</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_bottomOccupied</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_leftOccupied</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_rightOccupied</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">)};</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unRegisterSpace</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_topOccupied</span><span class="o">-=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_bottomOccupied</span><span class="o">-=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_leftOccupied</span><span class="o">-=</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_rightOccupied</span><span class="o">-=</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">)};</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_leftOccupied</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_topOccupied</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_rightOccupied</span><span class="p">,</span></div><div class='line' id='LC200'><span class="nx">y2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_bottomOccupied</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_rightOccupied</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_leftOccupied</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_bottomOccupied</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_topOccupied</span><span class="p">}};</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_topOccupied</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_bottomOccupied</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_rightOccupied</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_leftOccupied</span><span class="o">=</span><span class="mi">0</span><span class="p">};</span><span class="nx">M</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_isDirty</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="s2">&quot;middle&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC201'><span class="p">(</span><span class="nx">b</span><span class="o">=-</span><span class="k">this</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getFontString</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">rotate</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">angle</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">;(</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">borderThickness</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">roundRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cornerRadius</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fontColor</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrappedText</span><span class="p">.</span><span class="nx">lines</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrappedText</span><span class="p">.</span><span class="nx">lines</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span></div><div class='line' id='LC202'><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">restore</span><span class="p">()};</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrappedText</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">measureText</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Please set maxWidth and height for TextBlock&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrapText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_isDirty</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">}};</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_getLineWithWidth</span><span class="o">=</span></div><div class='line' id='LC203'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">Infinity</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getFontString</span><span class="p">();</span><span class="nx">d</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">width</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">break</span><span class="p">}</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">width</span><span class="p">);</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="s2">&quot; &quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">])</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">width</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">text</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">}};</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_wrapText</span><span class="o">=</span></div><div class='line' id='LC204'><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nb">String</span><span class="p">(</span><span class="nx">aa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getFontString</span><span class="p">();</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getLineWithWidth</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="p">);</span><span class="nx">d</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">));</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">d</span><span class="o">-=</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrappedText</span><span class="o">=</span><span class="p">{</span><span class="nx">lines</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_getFontString</span><span class="o">=</span></div><div class='line' id='LC205'><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">ma</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">null</span><span class="p">)};</span><span class="nx">M</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">U</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">||</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">));</span></div><div class='line' id='LC206'><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontStyle</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontWeight</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">cornerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">cornerRadius</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}),</span><span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">measureText</span><span class="p">();</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">||</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">?</span></div><div class='line' id='LC207'><span class="p">(</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;bottom&quot;</span><span class="p">),</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="o">-</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">d</span><span class="o">=-</span><span class="mi">90</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span></div><div class='line' id='LC208'><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">90</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">angle</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">registerSpace</span><span class="p">(</span><span class="nx">k</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">margin</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span></div><div class='line' id='LC209'><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">c</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">}};</span><span class="nx">M</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="p">[];</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">||</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">orientation</span><span class="o">=</span><span class="s2">&quot;horizontal&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">orientation</span><span class="o">=</span><span class="s2">&quot;vertical&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.9</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span></div><div class='line' id='LC210'><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendMarkerType</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendMarkerType</span><span class="o">:</span><span class="s2">&quot;line&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepLine&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;spline&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;scatter&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;bubble&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerType</span><span class="o">?</span><span class="nx">N</span><span class="p">.</span><span class="nx">getDefaultLegendMarker</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerType</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendText</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendText</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendMarkerColor</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendMarkerColor</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">||</span><span class="s2">&quot;line&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepLine&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;spline&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="mf">0.6</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;pie&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;doughnut&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">markerType</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">markerColor</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">textBlock</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC211'><span class="nx">chartType</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">markerSize</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">legendMarkerType</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">legendMarkerType</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendMarkerType</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendMarkerType</span><span class="o">:</span><span class="nx">N</span><span class="p">.</span><span class="nx">getDefaultLegendMarker</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">legendText</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">legendText</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendText</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">legendText</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;DataPoint: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">q</span><span class="o">%</span><span class="nx">m</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="o">!==</span><span class="nx">n</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC212'><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">markerSize</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;line&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepLine&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;spline&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="mf">0.6</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">markerType</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">markerColor</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">textBlock</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">chartType</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">markerSize</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;horizontal&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">orientation</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontWeight</span><span class="p">,</span></div><div class='line' id='LC213'><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">});</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalSpacing</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">items</span><span class="o">:</span><span class="p">[],</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">5</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="p">))}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">items</span><span class="o">:</span><span class="p">[],</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span></div><div class='line' id='LC214'><span class="nx">q</span><span class="o">=</span><span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">+=</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">_lineHeight</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span></div><div class='line' id='LC215'><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">}</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">horizontalAlign</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">2</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span></div><div class='line' id='LC216'><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">5</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="o">=++</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">objectType</span><span class="o">:</span><span class="s2">&quot;legendItem&quot;</span><span class="p">,</span><span class="nx">legendItemIndex</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="mf">0.2</span><span class="o">*</span><span class="nx">n</span><span class="o">:</span><span class="mf">0.4</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">+</span><span class="mf">0.2</span><span class="o">*</span><span class="nx">n</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">p</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">].</span><span class="nx">visible</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span></div><div class='line' id='LC217'><span class="mf">0.5</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">chartType</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">chartType</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">/</span><span class="mi">8</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="mf">0.1</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="mf">0.7</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">e</span><span class="o">-=</span><span class="mf">0.1</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarker</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="nx">n</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">markerType</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">markerColor</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mf">0.9</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span></div><div class='line' id='LC218'><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">].</span><span class="nx">visible</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">x1</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">x1</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">y1</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">y1</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">x2</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">x2</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">y2</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">y2</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">registerSpace</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC219'><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">5</span><span class="o">+</span><span class="mi">5</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">}};</span><span class="nx">M</span><span class="p">(</span><span class="nx">da</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">da</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="s2">&quot;red&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="p">)};</span><span class="nx">M</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">N</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDefaultAxisPlacement</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedLine&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span></div><div class='line' id='LC220'><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedLine100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;normal&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;xySwapped&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Unknown Chart Type: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span><span class="nx">N</span><span class="p">.</span><span class="nx">getDefaultLegendMarker</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedLine&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedLine100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;square&quot;</span><span class="p">;</span></div><div class='line' id='LC221'><span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;circle&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;triangle&quot;</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Unknown Chart Type: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span><span class="nx">N</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDataPointAtX</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">dataPoint</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="kc">NaN</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span></div><div class='line' id='LC222'><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">g</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(;;){</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">);</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">distance</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoint</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">distance</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">h</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">&lt;=</span><span class="nx">k</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">p</span><span class="o">++:</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&lt;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">+</span><span class="nx">e</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">x</span><span class="o">!==</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataPoint</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="kc">null</span><span class="o">:</span><span class="nx">b</span><span class="p">};</span><span class="nx">N</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDataPointAtXY</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="o">||</span></div><div class='line' id='LC223'><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kc">Infinity</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">getXValueAt</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(;;){</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">r</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">h</span><span class="p">]],</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;column&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stackedColumn&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stackedColumn100&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;bar&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stackedBar&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stackedBar100&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">&gt;=</span></div><div class='line' id='LC224'><span class="nx">l</span><span class="p">.</span><span class="nx">x1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">.</span><span class="nx">x2</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">l</span><span class="p">.</span><span class="nx">y1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span><span class="nx">a</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="nx">a</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">y1</span><span class="o">-</span><span class="nx">c</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">c</span><span class="p">))}),</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;line&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stepLine&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;spline&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;area&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stepArea&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stackedArea&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;stackedArea100&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;splineArea&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;scatter&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;markerSize&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="mi">4</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="mi">20</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">y1</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="nx">t</span><span class="o">&lt;=</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="nx">t</span><span class="p">});</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span></div><div class='line' id='LC225'><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="o">&lt;=</span><span class="nx">p</span><span class="o">?</span><span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">m</span><span class="o">++:</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;=</span><span class="nx">q</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;bubble&quot;</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">y1</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="nx">t</span><span class="o">&lt;=</span><span class="nx">q</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="nx">t</span><span class="p">}),</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;pie&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;doughnut&quot;</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="mf">0.6</span><span class="o">*</span><span class="nx">l</span><span class="p">.</span><span class="nx">radius</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">radius</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">+=</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="p">(</span><span class="mi">180</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="o">+</span><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">(</span><span class="mi">180</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="o">+</span><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="mi">180</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="o">+</span></div><div class='line' id='LC226'><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="mi">360</span><span class="p">),</span><span class="nx">q</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">+=</span><span class="mi">360</span><span class="p">,</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">+=</span><span class="mi">360</span><span class="p">)),</span><span class="nx">t</span><span class="o">&gt;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">))}</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">||</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">)</span><span class="k">break</span><span class="p">}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">-</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">+</span><span class="nx">e</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">distance</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">N</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerType</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerType</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">markerType</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerSize</span><span class="o">:</span></div><div class='line' id='LC227'><span class="k">this</span><span class="p">.</span><span class="nx">markerSize</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerColor</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">markerColor</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">color</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">color</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">a</span><span class="o">%</span><span class="k">this</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">],</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerBorderColor</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerBorderColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">markerBorderColor</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">markerBorderColor</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerBorderThickness</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">markerBorderThickness</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">markerBorderThickness</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">markerBorderThickness</span><span class="o">:</span><span class="kc">null</span><span class="p">}};</span><span class="nx">M</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createLabels</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span></div><div class='line' id='LC228'><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAutoFit</span><span class="o">?</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="o">?</span><span class="mf">0.9</span><span class="o">*</span><span class="nx">c</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="o">:</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="o">?</span><span class="mf">0.7</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelWrap</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">labelWrap</span><span class="o">?</span><span class="mf">0.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span></div><div class='line' id='LC229'><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAutoFit</span><span class="o">?</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="o">?</span><span class="mf">0.3</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="o">:</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="o">?</span><span class="mf">0.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelMaxWidth</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">labelWrap</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">labelWrap</span><span class="o">?</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;dateTime&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisXValueType</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">ia</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">ia</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span></div><div class='line' id='LC230'><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">ra</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">suffix</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">textBlock</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">effectiveHeight</span><span class="o">:</span><span class="kc">null</span><span class="p">});</span></div><div class='line' id='LC231'><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="p">),</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="o">=</span><span class="nx">h</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">ga</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">suffix</span><span class="p">,</span></div><div class='line' id='LC232'><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">textBlock</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">effectiveHeight</span><span class="o">:</span><span class="kc">null</span><span class="p">})}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelBackgroundColor</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="p">,</span></div><div class='line' id='LC233'><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelFontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">borderThickness</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">textBlock</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">effectiveHeight</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">stripLine</span><span class="o">:</span><span class="nx">b</span><span class="p">})};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createLabelsAndCalculateWidth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">createLabels</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span></div><div class='line' id='LC234'><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">))</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">));</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">effectiveWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontWeight</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="mi">5</span><span class="p">};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createLabelsAndCalculateHeight</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">createLabels</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">textBlock</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">measureText</span><span class="p">();</span></div><div class='line' id='LC235'><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">))</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">));</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">effectiveHeight</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontWeight</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="mi">5</span><span class="p">};</span><span class="nx">z</span><span class="p">.</span><span class="nx">setLayoutAndRender</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">calculateAxisParameters</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">calculateAxisParameters</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">calculateAxisParameters</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC236'><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">interval</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">interval</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">interval</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="p">.</span><span class="nx">interval</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">maximum</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">interval</span><span class="o">*</span><span class="nx">k</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">maximum</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">interval</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)}</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;normal&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">createLabelsAndCalculateWidth</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">=</span></div><div class='line' id='LC237'><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">createLabelsAndCalculateWidth</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">10</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="nx">g</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLabelsAndCalculateHeight</span><span class="p">());</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingRect</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">};</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="o">?</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span></div><div class='line' id='LC238'><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">boundingRect</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">});</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="o">?</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">boundingRect</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="p">();</span></div><div class='line' id='LC239'><span class="nx">m</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">m</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span><span class="mi">40</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">80</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="p">();</span><span class="nx">m</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLabelsAndCalculateWidth</span><span class="p">());</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">10</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">));</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span></div><div class='line' id='LC240'><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">10</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">));</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">createLabelsAndCalculateHeight</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">createLabelsAndCalculateHeight</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">10</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">g</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">boundingRect</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">l</span><span class="p">});</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">margin</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="o">+</span></div><div class='line' id='LC241'><span class="nx">b</span><span class="p">.</span><span class="nx">margin</span><span class="o">+</span><span class="nx">n</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">boundingRect</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">n</span><span class="p">});</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">:</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="o">?</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">margin</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">10</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">10</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">g</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingRect</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">k</span><span class="o">-</span><span class="nx">d</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="p">();</span></div><div class='line' id='LC242'><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="p">()}</span><span class="nx">p</span><span class="p">.</span><span class="nx">preparePlotArea</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">m</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1</span><span class="p">));</span><span class="nx">m</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderInterlacedColors</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderInterlacedColors</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderInterlacedColors</span><span class="p">();</span><span class="nx">m</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderGrid</span><span class="p">();</span></div><div class='line' id='LC243'><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderGrid</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderGrid</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderAxisLine</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderAxisLine</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderAxisLine</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="p">(</span><span class="s2">&quot;pixel&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="p">(</span><span class="s2">&quot;pixel&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="p">(</span><span class="s2">&quot;pixel&quot;</span><span class="p">)};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderLabelsTicksAndTitle</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">&amp;&amp;</span><span class="mi">360</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mf">1.2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">interval</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span></div><div class='line' id='LC244'><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">stripLine</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">),</span><span class="nx">c</span><span class="o">+=</span><span class="nx">h</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">stripLine</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">),</span><span class="nx">c</span><span class="o">+=</span><span class="nx">h</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC245'><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pixel&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">thickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span></div><div class='line' id='LC246'><span class="k">this</span><span class="p">.</span><span class="nx">tickColor</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++%</span><span class="mi">2</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">)</span><span class="mi">0</span><span class="o">===</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">angle</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">-</span><span class="mi">5</span><span class="o">:</span><span class="mi">5</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span></div><div class='line' id='LC247'><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span></div><div class='line' id='LC248'><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pixel&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">?</span></div><div class='line' id='LC249'><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">thickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickColor</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++%</span><span class="mi">2</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">)</span><span class="mi">0</span><span class="o">===</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">angle</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span></div><div class='line' id='LC250'><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">+</span><span class="mi">5</span><span class="o">:</span><span class="mi">5</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontWeight</span><span class="p">,</span></div><div class='line' id='LC251'><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC252'><span class="s2">&quot;pixel&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">thickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickColor</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++%</span><span class="mi">2</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">)</span><span class="o">-</span></div><div class='line' id='LC253'><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">angle</span><span class="o">:-</span><span class="mi">90</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontColor</span><span class="p">,</span></div><div class='line' id='LC254'><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">position</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pixel&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">?</span></div><div class='line' id='LC255'><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">thickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickThickness</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickColor</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">++%</span><span class="mi">2</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tickLength</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">labelAngle</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">textBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC256'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="o">=</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">boundingRect</span><span class="p">.</span><span class="nx">x2</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="p">,</span><span class="nx">maxWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">angle</span><span class="o">:</span><span class="mi">90</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">horizontalAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontWeight</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontColor</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontStyle</span><span class="p">,</span><span class="nx">textBaseline</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span></div><div class='line' id='LC257'><span class="k">this</span><span class="p">.</span><span class="nx">_titleTextBlock</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderInterlacedColors</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">interlacedColor</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">interlacedColor</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">position</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">position</span><span class="p">),</span></div><div class='line' id='LC258'><span class="nx">a</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">y2</span><span class="p">)),</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">interlacedColor</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">interlacedColor</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">stripLine</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">position</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">position</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">x2</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC259'><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">()};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderStripLinesOfThicknessType</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stripLines</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">_thicknessType</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;pixel&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="o">||!</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">A</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="s2">&quot;pixel&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">thickness</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">thickness</span><span class="p">);</span></div><div class='line' id='LC260'><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">y2</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">.</span><span class="nx">x2</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderGrid</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gridThickness</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">gridThickness</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gridThickness</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span></div><div class='line' id='LC261'><span class="k">this</span><span class="p">.</span><span class="nx">gridColor</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">position</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">position</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">position</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y1</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y2</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">());</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">stripLine</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">position</span><span class="o">&lt;</span></div><div class='line' id='LC262'><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">position</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_labels</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">position</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x1</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x2</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">())}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">renderAxisLine</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;black&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">lineThickness</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span></div><div class='line' id='LC263'><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}</span><span class="k">else</span><span class="s2">&quot;left&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">&amp;&amp;</span><span class="s2">&quot;right&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">lineThickness</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineThickness</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">lineThickness</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">stroke</span><span class="p">())};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPixelCoordinatesOnAxis</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC264'><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">b</span><span class="o">/=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x2</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getXValueAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span></div><div class='line' id='LC265'><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">calculateValueToPixelconversionParameters</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">pixelPerUnit</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">minimum</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">reference</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span></div><div class='line' id='LC266'><span class="nx">a</span><span class="p">.</span><span class="nx">minimum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">=</span><span class="nx">c</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">reference</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">pixelPerUnit</span><span class="o">=-</span><span class="mi">1</span><span class="o">*</span><span class="nx">b</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">reference</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">conversionParameters</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">calculateAxisParameters</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">layoutManager</span><span class="p">.</span><span class="nx">getFreeSpace</span><span class="p">();</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">||</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC267'><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="mi">500</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">?</span><span class="mi">8</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">/</span><span class="mi">62</span><span class="p">))</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">/</span><span class="mi">40</span><span class="p">),</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="mf">0.4</span><span class="p">,</span><span class="nx">c</span><span class="o">-=</span><span class="mf">0.4</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">Infinity</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">minDiff</span><span class="o">:</span></div><div class='line' id='LC268'><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;axisY&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMin</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">viewPortMax</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="mi">5</span><span class="p">,</span><span class="nx">c</span><span class="o">-=</span><span class="mi">5</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mf">0.05</span><span class="p">)),</span><span class="mi">0</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mf">0.05</span><span class="p">))),</span><span class="k">this</span><span class="p">.</span><span class="nx">includeZero</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">includeZero</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">));</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;dateTime&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisXValueType</span><span class="o">?</span></div><div class='line' id='LC269'><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="mi">1</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">5</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">10</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">20</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">50</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">100</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">200</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">250</span><span class="o">&lt;=</span></div><div class='line' id='LC270'><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">250</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">300</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">400</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="mi">500</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">5</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span></div><div class='line' id='LC271'><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">15</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">20</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">30</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">secondDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">5</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span></div><div class='line' id='LC272'><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">15</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">20</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">30</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">minuteDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">hourDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;hour&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">hourDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;hour&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">hourDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;hour&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">6</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">hourDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;hour&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span></div><div class='line' id='LC273'><span class="nx">x</span><span class="p">.</span><span class="nx">dayDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">dayDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">dayDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">weekDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;week&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">weekDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;week&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">weekDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;week&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">monthDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">monthDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span></div><div class='line' id='LC274'><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">monthDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">6</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">monthDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">yearDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">yearDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">yearDuration</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">z</span><span class="p">.</span><span class="nx">getNiceNumber</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="nx">x</span><span class="p">.</span><span class="nx">yearDuration</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;year&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="nx">c</span><span class="o">-</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">:</span></div><div class='line' id='LC275'><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;year&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;YYYY&quot;</span><span class="o">:</span><span class="s2">&quot;month&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;MMM YYYY&quot;</span><span class="o">:</span><span class="s2">&quot;week&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;MMM DD YYYY&quot;</span><span class="o">:</span><span class="s2">&quot;day&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;MMM DD YYYY&quot;</span><span class="o">:</span><span class="s2">&quot;hour&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;hh:mm TT&quot;</span><span class="o">:</span><span class="s2">&quot;minute&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;hh:mm TT&quot;</span><span class="o">:</span><span class="s2">&quot;second&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;hh:mm:ss TT&quot;</span><span class="o">:</span><span class="s2">&quot;millisecond&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC276'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;fff&#39;ms&#39;&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getLabelStartPoint</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">=</span><span class="s2">&quot;number&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">getNiceNumber</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">interval</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">interval</span><span class="o">:</span><span class="nx">z</span><span class="p">.</span><span class="nx">getNiceNumber</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">:</span></div><div class='line' id='LC277'><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMinimum</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionVariables</span><span class="p">.</span><span class="nx">internalMaximum</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">+</span><span class="mf">0.2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;axisY&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalStartPosition</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">));</span><span class="s2">&quot;axisX&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_absoluteMinimum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">min</span><span class="o">-</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_absoluteMaximum</span><span class="o">=</span></div><div class='line' id='LC278'><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_options</span><span class="p">.</span><span class="nx">maximum</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dataInfo</span><span class="p">.</span><span class="nx">max</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">=</span><span class="s2">&quot;#,##0.##&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="p">),</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">LN10</span><span class="p">))</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">)))</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">+=</span><span class="s2">&quot;#&quot;</span><span class="p">};</span><span class="nx">z</span><span class="p">.</span><span class="nx">getNiceNumber</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">LN10</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="mf">1.5</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="mi">5</span><span class="o">:</span><span class="mi">10</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">2</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">5</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">?</span><span class="mi">5</span><span class="o">:</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getLabelStartPoint</span><span class="o">=</span></div><div class='line' id='LC279'><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">minimum</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;millisecond&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;second&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">)</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;minute&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;hour&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">+</span></div><div class='line' id='LC280'><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;day&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;week&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="mi">7</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDay</span><span class="p">())),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;month&quot;</span><span class="o">===</span></div><div class='line' id='LC281'><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span><span class="s2">&quot;year&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">intervalType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">||</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setFullYear</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">M</span><span class="p">(</span><span class="nx">ea</span><span class="p">,</span></div><div class='line' id='LC282'><span class="nx">I</span><span class="p">);</span><span class="nx">M</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;canvasjs-chart-tooltip&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">boxShadow</span><span class="o">=</span><span class="s2">&quot;1px 1px 2px 2px rgba(0,0,0,0.1)&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="s2">&quot;1000&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s1">&#39;&lt;div style=&quot; width: auto;height: auto;min-width: 50px;&#39;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;line-height: 20px;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;padding: 5px;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;font-family: Calibri, Arial, Georgia, serif;&quot;</span><span class="p">;</span></div><div class='line' id='LC283'><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;font-weight: 400;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;font-style: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;italic;&quot;</span><span class="o">:</span><span class="s2">&quot;normal;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;font-size: 14px;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;color: #000000;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;text-align: left;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;border: 2px solid gray;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;background: rgba(255,255,255,.9);&quot;</span><span class="o">:</span><span class="s2">&quot;background: rgb(255,255,255);&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;text-indent: 0px;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;white-space: nowrap;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;border-radius: 10px;&quot;</span><span class="p">;</span><span class="nx">u</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;filter: alpha(opacity = 90);&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;filter: progid:DXImageTransform.Microsoft.Shadow(Strength=3, Direction=135, Color=&#39;#666666&#39;);&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">+=</span><span class="s1">&#39;} &quot;&gt; Sample Tooltip&lt;/div&gt;&#39;</span><span class="p">;</span></div><div class='line' id='LC284'><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderRadius</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderRadius</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_canvasJSContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">)}};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">mouseMoveHandler</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastUpdated</span><span class="o">&amp;&amp;</span><span class="mi">40</span><span class="o">&gt;</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastUpdated</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastUpdated</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateToolTip</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">))};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_updateToolTip</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevX</span><span class="p">)</span><span class="o">||</span></div><div class='line' id='LC285'><span class="nb">isNaN</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevY</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevX</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevY</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">_prevX</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevY</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">shared</span><span class="o">&amp;&amp;</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;xySwapped&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisPlacement</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span><span class="o">+</span></div><div class='line' id='LC286'><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">getDataPointAtX</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">index</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataSeries</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="kc">null</span><span class="o">!==</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">))}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">distance</span><span class="p">});</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">()</span><span class="o">===</span><span class="nx">h</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getDataPointAtXY</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentSeriesIndex</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">index</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC287'><span class="nx">u</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">eventObject</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">currentSeriesIndex</span><span class="o">=</span><span class="nx">eventObject</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">eventObject</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="o">?</span><span class="nx">eventObject</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentSeriesIndex</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">currentSeriesIndex</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="p">],</span></div><div class='line' id='LC288'><span class="nx">f</span><span class="p">.</span><span class="nx">dataSeries</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPoint</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">distance</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getDataPointAtX</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataSeries</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentDataPointIndex</span><span class="o">=</span></div><div class='line' id='LC289'><span class="nx">f</span><span class="p">.</span><span class="nx">index</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">;</span><span class="k">else</span> <span class="k">return</span><span class="p">;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">f</span><span class="p">.</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">highlightObjects</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getToolTipInnerHTML</span><span class="p">({</span><span class="nx">entries</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderRightColor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderLeftColor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">contentDiv</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span></div><div class='line' id='LC290'><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">index</span><span class="o">%</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">k</span><span class="p">){}</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">toolTipLeft</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">:</span><span class="p">(</span><span class="nx">toolTipLeft</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">x1</span><span class="o">+</span></div><div class='line' id='LC291'><span class="mf">0.5</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">toolTipLeft</span><span class="o">-=</span><span class="mi">10</span><span class="p">);</span><span class="nx">toolTipLeft</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">toolTipLeft</span><span class="o">?</span><span class="nx">toolTipLeft</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="o">:</span><span class="nx">toolTipLeft</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">+</span><span class="mi">20</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">shared</span><span class="o">||</span><span class="s2">&quot;line&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepLine&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;spline&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;area&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stepArea&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;splineArea&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span></div><div class='line' id='LC292'><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">y2</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">lineCoordinates</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">maximum</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">axisY</span><span class="p">.</span><span class="nx">minimum</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=-</span><span class="nx">e</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">+</span></div><div class='line' id='LC293'><span class="mi">5</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">-=</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">+</span><span class="mi">5</span><span class="o">-</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">toolTipLeft</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">animationEnabled</span><span class="o">||</span><span class="nx">h</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">disableAnimation</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">enableAnimation</span><span class="p">()}}};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">highlightObjects</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">resetOverlayedCanvas</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotArea</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_eventManager</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">dataPointIds</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="p">]])</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC294'><span class="nx">d</span><span class="p">.</span><span class="nx">objectType</span><span class="o">&amp;&amp;</span><span class="s2">&quot;dataPoint&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">objectType</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">e</span><span class="p">.</span><span class="nx">size</span><span class="o">&lt;&lt;</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">||</span><span class="s2">&quot;#FFFFFF&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderThickness</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderThickness</span><span class="o">||</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="mf">0.1</span><span class="o">*</span><span class="nx">e</span><span class="p">.</span><span class="nx">size</span><span class="p">),</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">([</span><span class="nx">e</span><span class="p">]);</span></div><div class='line' id='LC295'><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getMarkerProperties</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">overlaidCanvasCtx</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarkers</span><span class="p">([</span><span class="nx">e</span><span class="p">]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y2</span><span class="p">,</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span><span class="nx">ha</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">radius</span><span class="p">,</span></div><div class='line' id='LC296'><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">startAngle</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">endAngle</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getToolTipInnerHTML</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">entries</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="p">){</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="p">({</span><span class="nx">entries</span><span class="o">:</span><span class="nx">a</span><span class="p">});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">index</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="mi">0</span><span class="o">===</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span></div><div class='line' id='LC297'><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;{x}&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">+=</span><span class="s2">&quot;&lt;/br&gt;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!==</span></div><div class='line' id='LC298'><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;&lt;span style=&#39;\&quot;&#39;color:{color};&#39;\&quot;&#39;&gt;{name}:&lt;/span&gt;&amp;nbsp;&amp;nbsp;{y}&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;&lt;span style=&#39;\&quot;&#39;color:{color};&#39;\&quot;&#39;&gt;{name}:&lt;/span&gt;&amp;nbsp;&amp;nbsp;{y}, &amp;nbsp;&amp;nbsp;{z}&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span></div><div class='line' id='LC299'><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;&amp;nbsp;&amp;nbsp;{y}&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">replaceKeywordsWithValue</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;&lt;/br&gt;&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataSeries</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataPoint</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">index</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepLine&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;spline&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;area&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stepArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;splineArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;column&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;bar&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;scatter&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedColumn&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedColumn100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedBar100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;stackedArea100&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span></div><div class='line' id='LC300'><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;&lt;span style=&#39;\&quot;&#39;color:{color};&#39;\&quot;&#39;&gt;&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">label</span><span class="o">?</span><span class="s2">&quot;{label}&quot;</span><span class="o">:</span><span class="s2">&quot;{x}&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; :&lt;/span&gt;&amp;nbsp;&amp;nbsp;{y}&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;bubble&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;&lt;span style=&#39;\&quot;&#39;color:{color};&#39;\&quot;&#39;&gt;&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">label</span><span class="o">?</span><span class="s2">&quot;{label}&quot;</span><span class="o">:</span><span class="s2">&quot;{x}&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:&lt;/span&gt;&amp;nbsp;&amp;nbsp;{y}, &amp;nbsp;&amp;nbsp;{z}&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;pie&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;doughnut&quot;</span><span class="o">===</span></div><div class='line' id='LC301'><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolTipContent</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="s2">&quot;{name}:&amp;nbsp;&amp;nbsp;&quot;</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">label</span><span class="o">?</span><span class="s2">&quot;{label}:&amp;nbsp;&amp;nbsp;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;{y}&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">replaceKeywordsWithValue</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableAnimation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitTransition</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitTransition</span><span class="o">=</span><span class="s2">&quot;left .2s ease-out, bottom .2s ease-out&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">MozTransition</span><span class="o">=</span><span class="s2">&quot;left .2s ease-out, bottom .2s ease-out&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">MsTransition</span><span class="o">=</span></div><div class='line' id='LC302'><span class="s2">&quot;left .2s ease-out, bottom .2s ease-out&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="s2">&quot;left .2s ease-out, bottom .2s ease-out&quot;</span><span class="p">)};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disableAnimation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitTransition</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitTransition</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">MozTransition</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">MsTransition</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hide</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentSeriesIndex</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_prevX</span><span class="o">=</span><span class="kc">NaN</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">resetOverlayedCanvas</span><span class="p">())};</span></div><div class='line' id='LC303'><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">replaceKeywordsWithValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\{\s*[a-zA-Z]+\s*\}|&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s1">&#39;&quot;&#39;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&#39;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&#39;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;color&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">[</span><span class="nx">d</span><span class="o">%</span><span class="nx">b</span><span class="p">.</span><span class="nx">_colorSet</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;x&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="s2">&quot;dateTime&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotInfo</span><span class="p">.</span><span class="nx">axisXValueType</span><span class="o">?</span><span class="nx">ra</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span></div><div class='line' id='LC304'><span class="nx">c</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">axisX</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">axisX</span><span class="p">.</span><span class="nx">valueFormatString</span><span class="o">:</span><span class="s2">&quot;DD MMM YY&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">)</span><span class="o">:</span><span class="nx">ga</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">xValueFormatString</span><span class="o">:</span><span class="s2">&quot;#,##0.########&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;y&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">ga</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">yValueFormatString</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">yValueFormatString</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">yValueFormatString</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">yValueFormatString</span><span class="o">:</span><span class="s2">&quot;#,##0.########&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_cultureInfo</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]})};</span><span class="nx">S</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">objectMap</span><span class="o">=</span></div><div class='line' id='LC305'><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">rectangularRegionEventSubscriptions</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">previousDataPointEventObject</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">eventObjects</span><span class="o">=</span><span class="p">[];</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ghostCtx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">())};</span><span class="nx">S</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getNewObjectTrackingId</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">lastObjectId</span><span class="p">};</span><span class="nx">S</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">mouseEventHandler</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;mousemove&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">getObjectAtXY</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;dataPoint&quot;</span><span class="o">===</span></div><div class='line' id='LC306'><span class="nx">d</span><span class="p">.</span><span class="nx">objectType</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">eventParameter</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_options</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">index</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">eventContext</span><span class="o">=</span><span class="p">{</span><span class="nx">context</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">userContext</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">mouseover</span><span class="o">:</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span><span class="nx">d</span><span class="p">.</span><span class="nx">eventParameter</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_options</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">index</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">eventContext</span><span class="o">=</span><span class="p">{</span><span class="nx">context</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">userContext</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_options</span><span class="p">,</span></div><div class='line' id='LC307'><span class="nx">mouseover</span><span class="o">:</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">objectMap</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">id</span><span class="p">])}</span><span class="k">else</span><span class="s2">&quot;legendItem&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">objectType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">dataPoints</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">eventParameter</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">dataSeries</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_options</span><span class="p">,</span><span class="nx">dataPoint</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">dataPointIndex</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataPointIndex</span><span class="p">,</span><span class="nx">dataSeriesIndex</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">eventContext</span><span class="o">=</span><span class="p">{</span><span class="nx">context</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">legend</span><span class="p">,</span><span class="nx">userContext</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">_options</span><span class="p">,</span><span class="nx">mouseover</span><span class="o">:</span><span class="s2">&quot;itemmouseover&quot;</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="s2">&quot;itemmousemove&quot;</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="s2">&quot;itemmouseout&quot;</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="s2">&quot;itemclick&quot;</span><span class="p">},</span></div><div class='line' id='LC308'><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">id</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="p">){</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">h</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">[</span><span class="nx">b</span><span class="p">])}</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">id</span><span class="p">){</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseoveredObjectMaps</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]));</span><span class="s2">&quot;click&quot;</span><span class="o">===</span></div><div class='line' id='LC309'><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;mousemove&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}}};</span><span class="nx">S</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fireEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventParameter</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventContext</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventContext</span><span class="p">.</span><span class="nx">userContext</span><span class="p">;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]])</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]].</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="s2">&quot;mouseout&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">cursor</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">cursor</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">cursor</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">_defaultCursor</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">eventParameter</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">eventContext</span><span class="p">);</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;dataPoint&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">objectType</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">pieDoughnutClickHandler</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC310'><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">pieDoughnutClickHandler</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataSeriesIndex</span><span class="p">],</span><span class="nx">d</span><span class="p">)}};</span><span class="nx">M</span><span class="p">(</span><span class="nx">pa</span><span class="p">,</span><span class="nx">I</span><span class="p">);</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="p">{</span><span class="nx">drawMarker</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="s2">&quot;#000000&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="s2">&quot;#000000&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">k</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;circle&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.15</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">p</span><span class="p">)))</span><span class="o">:</span><span class="s2">&quot;square&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">,</span></div><div class='line' id='LC311'><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.15</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">p</span><span class="p">)))</span><span class="o">:</span><span class="s2">&quot;triangle&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mf">0.15</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">p</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">())</span><span class="o">:</span><span class="s2">&quot;cross&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">())}},</span><span class="nx">drawMarkers</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC312'><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">H</span><span class="p">.</span><span class="nx">drawMarker</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderThickness</span><span class="p">)}}},</span><span class="nx">ta</span><span class="o">=</span><span class="p">{</span><span class="nx">Chart</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">render</span><span class="p">()};</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_options</span><span class="p">},</span><span class="nx">addColorSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">V</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">},</span><span class="nx">addCultureInfo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">fa</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">}};</span><span class="nx">ta</span><span class="p">.</span><span class="nx">Chart</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;v1.4.0 Beta 2&quot;</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">CanvasJS</span><span class="o">=</span><span class="nx">ta</span><span class="p">})();</span></div><div class='line' id='LC313'><span class="cm">/*</span></div><div class='line' id='LC314'><span class="cm">  excanvas is used to support IE678 which do not implement HTML5 Canvas Element. You can safely remove the following excanvas code if you don&#39;t need to support older browsers.</span></div><div class='line' id='LC315'><br/></div><div class='line' id='LC316'><span class="cm">  Copyright 2006 Google Inc. https://code.google.com/p/explorercanvas/</span></div><div class='line' id='LC317'><span class="cm">  Licensed under the Apache License, Version 2.0</span></div><div class='line' id='LC318'><span class="cm">*/</span></div><div class='line' id='LC319'><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">).</span><span class="nx">getContext</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">context_</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">context_</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">(</span><span class="k">this</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))}}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="s2">&quot;&amp;amp;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&quot;/g</span><span class="p">,</span><span class="s2">&quot;&amp;quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">g_vml_</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&quot;g_vml_&quot;</span><span class="p">,</span><span class="s2">&quot;urn:schemas-microsoft-com:vml&quot;</span><span class="p">,</span><span class="s2">&quot;#default#VML&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">g_o_</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&quot;g_o_&quot;</span><span class="p">,</span><span class="s2">&quot;urn:schemas-microsoft-com:office:office&quot;</span><span class="p">,</span><span class="s2">&quot;#default#VML&quot;</span><span class="p">);</span></div><div class='line' id='LC320'><span class="nx">a</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">.</span><span class="nx">ex_canvas_</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createStyleSheet</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">owningElement</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;ex_canvas_&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">propertyName</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;width&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">getContext</span><span class="p">().</span><span class="nx">clearRect</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">width</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;height&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">getContext</span><span class="p">().</span><span class="nx">clearRect</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">height</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">+</span></div><div class='line' id='LC321'><span class="s2">&quot;px&quot;</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(){</span><span class="k">return</span><span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]]}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">D</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">d</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">e</span><span class="p">];</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineCap</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCap</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineJoin</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineJoin</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">miterLimit</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">miterLimit</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadowBlur</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowBlur</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadowColor</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowColor</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadowOffsetX</span><span class="o">=</span></div><div class='line' id='LC322'><span class="nx">a</span><span class="p">.</span><span class="nx">shadowOffsetX</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadowOffsetY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowOffsetY</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">textAlign</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineScale_</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineScale_</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">4</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="s2">&quot;a&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">++</span><span class="p">;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">--</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">&gt;</span><span class="mi">6</span><span class="o">*</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="o">:</span></div><div class='line' id='LC323'><span class="mi">1</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="mi">2</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">*</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">/</span><span class="mi">3</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">H</span><span class="p">)</span><span class="k">return</span> <span class="nx">H</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/^rgb/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">=-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;%&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">))</span><span class="o">:+</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="o">+=</span><span class="nx">v</span><span class="p">[</span><span class="nx">E</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">)];</span><span class="nx">c</span><span class="o">=+</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">]}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/^hsl/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="mi">360</span><span class="o">%</span><span class="mi">360</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mf">0.5</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)}</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="o">+</span></div><div class='line' id='LC324'><span class="nx">v</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">g</span><span class="p">)]</span><span class="o">+</span><span class="nx">v</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">e</span><span class="p">)]</span><span class="o">+</span><span class="nx">v</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">b</span><span class="p">)];</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">]}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">H</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">alpha</span><span class="o">:</span><span class="nx">c</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="o">=</span><span class="nx">D</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">mStack_</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">aStack_</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="s2">&quot;#000&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineJoin</span><span class="o">=</span><span class="s2">&quot;miter&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineCap</span><span class="o">=</span><span class="s2">&quot;butt&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">miterLimit</span><span class="o">=</span><span class="mi">1</span><span class="o">*</span><span class="nx">q</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="s2">&quot;10px sans-serif&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;alphabetic&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;width:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">+</span><span class="s2">&quot;px;height:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">+</span><span class="s2">&quot;px;overflow:hidden;position:absolute&quot;</span><span class="p">,</span></div><div class='line' id='LC325'><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="o">=</span><span class="s2">&quot;red&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="s2">&quot;alpha(opacity=0)&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineScale_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;bezierCurveTo&quot;</span><span class="p">,</span><span class="nx">cp1x</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">cp1y</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">cp2x</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">cp2y</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentX_</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentY_</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="p">}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">alpha</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineScale_</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">*=</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;g_vml_:stroke&quot;</span><span class="p">,</span></div><div class='line' id='LC326'><span class="s1">&#39; opacity=&quot;&#39;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; joinstyle=&quot;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineJoin</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; miterlimit=&quot;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">miterLimit</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; endcap=&quot;&#39;</span><span class="p">,</span><span class="nx">$</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineCap</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;square&quot;</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; weight=&quot;&#39;</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="s1">&#39;px&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; color=&quot;&#39;</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nx">w</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;gradient&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">type_</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1_</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1_</span><span class="o">/</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">x0_</span><span class="o">/</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y0_</span><span class="o">/</span><span class="nx">d</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">p</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="mi">360</span><span class="p">);</span><span class="mi">1</span><span class="nx">E</span><span class="o">-</span><span class="mi">6</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">x0_</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y0_</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="nx">n</span><span class="p">,</span><span class="nx">k</span><span class="o">/=</span><span class="nx">f</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span></div><div class='line' id='LC327'><span class="nx">n</span><span class="o">/=</span><span class="nx">d</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">.</span><span class="nx">r0_</span><span class="o">/</span><span class="nx">m</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">.</span><span class="nx">r1_</span><span class="o">/</span><span class="nx">m</span><span class="o">-</span><span class="nx">u</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">colors_</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="p">});</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">color</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">color</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">alpha</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">alpha</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">offset</span><span class="o">*</span><span class="nx">m</span><span class="o">+</span><span class="nx">u</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">color</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;g_vml_:fill type=&quot;&#39;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">type_</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; method=&quot;none&quot; focus=&quot;100%&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; color=&quot;&#39;</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; color2=&quot;&#39;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; colors=&quot;&#39;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; opacity=&quot;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; g_o_:opacity2=&quot;&#39;</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; angle=&quot;&#39;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; focusposition=&quot;&#39;</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">e</span> <span class="k">instanceof</span></div><div class='line' id='LC328'><span class="nx">I</span><span class="o">?</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;g_vml_:fill&quot;</span><span class="p">,</span><span class="s1">&#39; position=&quot;&#39;</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">/</span><span class="nx">k</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">n</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; type=&quot;tile&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; src=&quot;&#39;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">src_</span><span class="p">,</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;g_vml_:fill color=&quot;&#39;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="s1">&#39;&quot; opacity=&quot;&#39;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">alpha</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="p">,</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">m_</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">q</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">q</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span><span class="o">-</span><span class="nx">r</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">1</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">m_</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineScale_</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="nx">ba</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span></div><div class='line' id='LC329'><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]))))}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type_</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">r1_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y1_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x1_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">r0_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y0_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x0_</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">colors_</span><span class="o">=</span><span class="p">[]}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="s2">&quot;IMG&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="s2">&quot;TYPE_MISMATCH_ERR&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="s2">&quot;INVALID_STATE_ERR&quot;</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;repeat&quot;</span><span class="o">:</span><span class="k">case</span> <span class="kc">null</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">repetition_</span><span class="o">=</span><span class="s2">&quot;repeat&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;repeat-x&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;repeat-y&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;no-repeat&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">repetition_</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="s2">&quot;SYNTAX_ERR&quot;</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">src_</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width_</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height_</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span></div><div class='line' id='LC330'><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">code</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: DOM Exception &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">code</span><span class="p">}</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nb">Math</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">round</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">sin</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">cos</span><span class="p">,</span><span class="nx">ba</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">abs</span><span class="p">,</span><span class="nx">aa</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/MSIE ([\d.]+)?/</span><span class="p">);</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">;</span><span class="nx">O</span><span class="p">(</span><span class="nb">document</span><span class="p">);</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">init_</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">))},</span><span class="nx">init_</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">initElement</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])},</span><span class="nx">initElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="o">=</span></div><div class='line' id='LC331'><span class="nx">V</span><span class="p">;</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onpropertychange&quot;</span><span class="p">,</span><span class="nx">X</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onresize&quot;</span><span class="p">,</span><span class="nx">Y</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">.</span><span class="nx">specified</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">.</span><span class="nx">specified</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}};</span><span class="nx">U</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">16</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">16</span><span class="o">&gt;</span><span class="nx">B</span><span class="p">;</span><span class="nx">B</span><span class="o">++</span><span class="p">)</span><span class="nx">v</span><span class="p">[</span><span class="mi">16</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">B</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">+</span><span class="nx">B</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="p">{</span><span class="nx">aliceblue</span><span class="o">:</span><span class="s2">&quot;#F0F8FF&quot;</span><span class="p">,</span><span class="nx">antiquewhite</span><span class="o">:</span><span class="s2">&quot;#FAEBD7&quot;</span><span class="p">,</span><span class="nx">aquamarine</span><span class="o">:</span><span class="s2">&quot;#7FFFD4&quot;</span><span class="p">,</span><span class="nx">azure</span><span class="o">:</span><span class="s2">&quot;#F0FFFF&quot;</span><span class="p">,</span><span class="nx">beige</span><span class="o">:</span><span class="s2">&quot;#F5F5DC&quot;</span><span class="p">,</span></div><div class='line' id='LC332'><span class="nx">bisque</span><span class="o">:</span><span class="s2">&quot;#FFE4C4&quot;</span><span class="p">,</span><span class="nx">black</span><span class="o">:</span><span class="s2">&quot;#000000&quot;</span><span class="p">,</span><span class="nx">blanchedalmond</span><span class="o">:</span><span class="s2">&quot;#FFEBCD&quot;</span><span class="p">,</span><span class="nx">blueviolet</span><span class="o">:</span><span class="s2">&quot;#8A2BE2&quot;</span><span class="p">,</span><span class="nx">brown</span><span class="o">:</span><span class="s2">&quot;#A52A2A&quot;</span><span class="p">,</span><span class="nx">burlywood</span><span class="o">:</span><span class="s2">&quot;#DEB887&quot;</span><span class="p">,</span><span class="nx">cadetblue</span><span class="o">:</span><span class="s2">&quot;#5F9EA0&quot;</span><span class="p">,</span><span class="nx">chartreuse</span><span class="o">:</span><span class="s2">&quot;#7FFF00&quot;</span><span class="p">,</span><span class="nx">chocolate</span><span class="o">:</span><span class="s2">&quot;#D2691E&quot;</span><span class="p">,</span><span class="nx">coral</span><span class="o">:</span><span class="s2">&quot;#FF7F50&quot;</span><span class="p">,</span><span class="nx">cornflowerblue</span><span class="o">:</span><span class="s2">&quot;#6495ED&quot;</span><span class="p">,</span><span class="nx">cornsilk</span><span class="o">:</span><span class="s2">&quot;#FFF8DC&quot;</span><span class="p">,</span><span class="nx">crimson</span><span class="o">:</span><span class="s2">&quot;#DC143C&quot;</span><span class="p">,</span><span class="nx">cyan</span><span class="o">:</span><span class="s2">&quot;#00FFFF&quot;</span><span class="p">,</span><span class="nx">darkblue</span><span class="o">:</span><span class="s2">&quot;#00008B&quot;</span><span class="p">,</span><span class="nx">darkcyan</span><span class="o">:</span><span class="s2">&quot;#008B8B&quot;</span><span class="p">,</span><span class="nx">darkgoldenrod</span><span class="o">:</span><span class="s2">&quot;#B8860B&quot;</span><span class="p">,</span><span class="nx">darkgray</span><span class="o">:</span><span class="s2">&quot;#A9A9A9&quot;</span><span class="p">,</span><span class="nx">darkgreen</span><span class="o">:</span><span class="s2">&quot;#006400&quot;</span><span class="p">,</span><span class="nx">darkgrey</span><span class="o">:</span><span class="s2">&quot;#A9A9A9&quot;</span><span class="p">,</span><span class="nx">darkkhaki</span><span class="o">:</span><span class="s2">&quot;#BDB76B&quot;</span><span class="p">,</span><span class="nx">darkmagenta</span><span class="o">:</span><span class="s2">&quot;#8B008B&quot;</span><span class="p">,</span><span class="nx">darkolivegreen</span><span class="o">:</span><span class="s2">&quot;#556B2F&quot;</span><span class="p">,</span><span class="nx">darkorange</span><span class="o">:</span><span class="s2">&quot;#FF8C00&quot;</span><span class="p">,</span><span class="nx">darkorchid</span><span class="o">:</span><span class="s2">&quot;#9932CC&quot;</span><span class="p">,</span><span class="nx">darkred</span><span class="o">:</span><span class="s2">&quot;#8B0000&quot;</span><span class="p">,</span></div><div class='line' id='LC333'><span class="nx">darksalmon</span><span class="o">:</span><span class="s2">&quot;#E9967A&quot;</span><span class="p">,</span><span class="nx">darkseagreen</span><span class="o">:</span><span class="s2">&quot;#8FBC8F&quot;</span><span class="p">,</span><span class="nx">darkslateblue</span><span class="o">:</span><span class="s2">&quot;#483D8B&quot;</span><span class="p">,</span><span class="nx">darkslategray</span><span class="o">:</span><span class="s2">&quot;#2F4F4F&quot;</span><span class="p">,</span><span class="nx">darkslategrey</span><span class="o">:</span><span class="s2">&quot;#2F4F4F&quot;</span><span class="p">,</span><span class="nx">darkturquoise</span><span class="o">:</span><span class="s2">&quot;#00CED1&quot;</span><span class="p">,</span><span class="nx">darkviolet</span><span class="o">:</span><span class="s2">&quot;#9400D3&quot;</span><span class="p">,</span><span class="nx">deeppink</span><span class="o">:</span><span class="s2">&quot;#FF1493&quot;</span><span class="p">,</span><span class="nx">deepskyblue</span><span class="o">:</span><span class="s2">&quot;#00BFFF&quot;</span><span class="p">,</span><span class="nx">dimgray</span><span class="o">:</span><span class="s2">&quot;#696969&quot;</span><span class="p">,</span><span class="nx">dimgrey</span><span class="o">:</span><span class="s2">&quot;#696969&quot;</span><span class="p">,</span><span class="nx">dodgerblue</span><span class="o">:</span><span class="s2">&quot;#1E90FF&quot;</span><span class="p">,</span><span class="nx">firebrick</span><span class="o">:</span><span class="s2">&quot;#B22222&quot;</span><span class="p">,</span><span class="nx">floralwhite</span><span class="o">:</span><span class="s2">&quot;#FFFAF0&quot;</span><span class="p">,</span><span class="nx">forestgreen</span><span class="o">:</span><span class="s2">&quot;#228B22&quot;</span><span class="p">,</span><span class="nx">gainsboro</span><span class="o">:</span><span class="s2">&quot;#DCDCDC&quot;</span><span class="p">,</span><span class="nx">ghostwhite</span><span class="o">:</span><span class="s2">&quot;#F8F8FF&quot;</span><span class="p">,</span><span class="nx">gold</span><span class="o">:</span><span class="s2">&quot;#FFD700&quot;</span><span class="p">,</span><span class="nx">goldenrod</span><span class="o">:</span><span class="s2">&quot;#DAA520&quot;</span><span class="p">,</span><span class="nx">grey</span><span class="o">:</span><span class="s2">&quot;#808080&quot;</span><span class="p">,</span><span class="nx">greenyellow</span><span class="o">:</span><span class="s2">&quot;#ADFF2F&quot;</span><span class="p">,</span><span class="nx">honeydew</span><span class="o">:</span><span class="s2">&quot;#F0FFF0&quot;</span><span class="p">,</span><span class="nx">hotpink</span><span class="o">:</span><span class="s2">&quot;#FF69B4&quot;</span><span class="p">,</span><span class="nx">indianred</span><span class="o">:</span><span class="s2">&quot;#CD5C5C&quot;</span><span class="p">,</span><span class="nx">indigo</span><span class="o">:</span><span class="s2">&quot;#4B0082&quot;</span><span class="p">,</span></div><div class='line' id='LC334'><span class="nx">ivory</span><span class="o">:</span><span class="s2">&quot;#FFFFF0&quot;</span><span class="p">,</span><span class="nx">khaki</span><span class="o">:</span><span class="s2">&quot;#F0E68C&quot;</span><span class="p">,</span><span class="nx">lavender</span><span class="o">:</span><span class="s2">&quot;#E6E6FA&quot;</span><span class="p">,</span><span class="nx">lavenderblush</span><span class="o">:</span><span class="s2">&quot;#FFF0F5&quot;</span><span class="p">,</span><span class="nx">lawngreen</span><span class="o">:</span><span class="s2">&quot;#7CFC00&quot;</span><span class="p">,</span><span class="nx">lemonchiffon</span><span class="o">:</span><span class="s2">&quot;#FFFACD&quot;</span><span class="p">,</span><span class="nx">lightblue</span><span class="o">:</span><span class="s2">&quot;#ADD8E6&quot;</span><span class="p">,</span><span class="nx">lightcoral</span><span class="o">:</span><span class="s2">&quot;#F08080&quot;</span><span class="p">,</span><span class="nx">lightcyan</span><span class="o">:</span><span class="s2">&quot;#E0FFFF&quot;</span><span class="p">,</span><span class="nx">lightgoldenrodyellow</span><span class="o">:</span><span class="s2">&quot;#FAFAD2&quot;</span><span class="p">,</span><span class="nx">lightgreen</span><span class="o">:</span><span class="s2">&quot;#90EE90&quot;</span><span class="p">,</span><span class="nx">lightgrey</span><span class="o">:</span><span class="s2">&quot;#D3D3D3&quot;</span><span class="p">,</span><span class="nx">lightpink</span><span class="o">:</span><span class="s2">&quot;#FFB6C1&quot;</span><span class="p">,</span><span class="nx">lightsalmon</span><span class="o">:</span><span class="s2">&quot;#FFA07A&quot;</span><span class="p">,</span><span class="nx">lightseagreen</span><span class="o">:</span><span class="s2">&quot;#20B2AA&quot;</span><span class="p">,</span><span class="nx">lightskyblue</span><span class="o">:</span><span class="s2">&quot;#87CEFA&quot;</span><span class="p">,</span><span class="nx">lightslategray</span><span class="o">:</span><span class="s2">&quot;#778899&quot;</span><span class="p">,</span><span class="nx">lightslategrey</span><span class="o">:</span><span class="s2">&quot;#778899&quot;</span><span class="p">,</span><span class="nx">lightsteelblue</span><span class="o">:</span><span class="s2">&quot;#B0C4DE&quot;</span><span class="p">,</span><span class="nx">lightyellow</span><span class="o">:</span><span class="s2">&quot;#FFFFE0&quot;</span><span class="p">,</span><span class="nx">limegreen</span><span class="o">:</span><span class="s2">&quot;#32CD32&quot;</span><span class="p">,</span><span class="nx">linen</span><span class="o">:</span><span class="s2">&quot;#FAF0E6&quot;</span><span class="p">,</span><span class="nx">magenta</span><span class="o">:</span><span class="s2">&quot;#FF00FF&quot;</span><span class="p">,</span><span class="nx">mediumaquamarine</span><span class="o">:</span><span class="s2">&quot;#66CDAA&quot;</span><span class="p">,</span></div><div class='line' id='LC335'><span class="nx">mediumblue</span><span class="o">:</span><span class="s2">&quot;#0000CD&quot;</span><span class="p">,</span><span class="nx">mediumorchid</span><span class="o">:</span><span class="s2">&quot;#BA55D3&quot;</span><span class="p">,</span><span class="nx">mediumpurple</span><span class="o">:</span><span class="s2">&quot;#9370DB&quot;</span><span class="p">,</span><span class="nx">mediumseagreen</span><span class="o">:</span><span class="s2">&quot;#3CB371&quot;</span><span class="p">,</span><span class="nx">mediumslateblue</span><span class="o">:</span><span class="s2">&quot;#7B68EE&quot;</span><span class="p">,</span><span class="nx">mediumspringgreen</span><span class="o">:</span><span class="s2">&quot;#00FA9A&quot;</span><span class="p">,</span><span class="nx">mediumturquoise</span><span class="o">:</span><span class="s2">&quot;#48D1CC&quot;</span><span class="p">,</span><span class="nx">mediumvioletred</span><span class="o">:</span><span class="s2">&quot;#C71585&quot;</span><span class="p">,</span><span class="nx">midnightblue</span><span class="o">:</span><span class="s2">&quot;#191970&quot;</span><span class="p">,</span><span class="nx">mintcream</span><span class="o">:</span><span class="s2">&quot;#F5FFFA&quot;</span><span class="p">,</span><span class="nx">mistyrose</span><span class="o">:</span><span class="s2">&quot;#FFE4E1&quot;</span><span class="p">,</span><span class="nx">moccasin</span><span class="o">:</span><span class="s2">&quot;#FFE4B5&quot;</span><span class="p">,</span><span class="nx">navajowhite</span><span class="o">:</span><span class="s2">&quot;#FFDEAD&quot;</span><span class="p">,</span><span class="nx">oldlace</span><span class="o">:</span><span class="s2">&quot;#FDF5E6&quot;</span><span class="p">,</span><span class="nx">olivedrab</span><span class="o">:</span><span class="s2">&quot;#6B8E23&quot;</span><span class="p">,</span><span class="nx">orange</span><span class="o">:</span><span class="s2">&quot;#FFA500&quot;</span><span class="p">,</span><span class="nx">orangered</span><span class="o">:</span><span class="s2">&quot;#FF4500&quot;</span><span class="p">,</span><span class="nx">orchid</span><span class="o">:</span><span class="s2">&quot;#DA70D6&quot;</span><span class="p">,</span><span class="nx">palegoldenrod</span><span class="o">:</span><span class="s2">&quot;#EEE8AA&quot;</span><span class="p">,</span><span class="nx">palegreen</span><span class="o">:</span><span class="s2">&quot;#98FB98&quot;</span><span class="p">,</span><span class="nx">paleturquoise</span><span class="o">:</span><span class="s2">&quot;#AFEEEE&quot;</span><span class="p">,</span><span class="nx">palevioletred</span><span class="o">:</span><span class="s2">&quot;#DB7093&quot;</span><span class="p">,</span><span class="nx">papayawhip</span><span class="o">:</span><span class="s2">&quot;#FFEFD5&quot;</span><span class="p">,</span></div><div class='line' id='LC336'><span class="nx">peachpuff</span><span class="o">:</span><span class="s2">&quot;#FFDAB9&quot;</span><span class="p">,</span><span class="nx">peru</span><span class="o">:</span><span class="s2">&quot;#CD853F&quot;</span><span class="p">,</span><span class="nx">pink</span><span class="o">:</span><span class="s2">&quot;#FFC0CB&quot;</span><span class="p">,</span><span class="nx">plum</span><span class="o">:</span><span class="s2">&quot;#DDA0DD&quot;</span><span class="p">,</span><span class="nx">powderblue</span><span class="o">:</span><span class="s2">&quot;#B0E0E6&quot;</span><span class="p">,</span><span class="nx">rosybrown</span><span class="o">:</span><span class="s2">&quot;#BC8F8F&quot;</span><span class="p">,</span><span class="nx">royalblue</span><span class="o">:</span><span class="s2">&quot;#4169E1&quot;</span><span class="p">,</span><span class="nx">saddlebrown</span><span class="o">:</span><span class="s2">&quot;#8B4513&quot;</span><span class="p">,</span><span class="nx">salmon</span><span class="o">:</span><span class="s2">&quot;#FA8072&quot;</span><span class="p">,</span><span class="nx">sandybrown</span><span class="o">:</span><span class="s2">&quot;#F4A460&quot;</span><span class="p">,</span><span class="nx">seagreen</span><span class="o">:</span><span class="s2">&quot;#2E8B57&quot;</span><span class="p">,</span><span class="nx">seashell</span><span class="o">:</span><span class="s2">&quot;#FFF5EE&quot;</span><span class="p">,</span><span class="nx">sienna</span><span class="o">:</span><span class="s2">&quot;#A0522D&quot;</span><span class="p">,</span><span class="nx">skyblue</span><span class="o">:</span><span class="s2">&quot;#87CEEB&quot;</span><span class="p">,</span><span class="nx">slateblue</span><span class="o">:</span><span class="s2">&quot;#6A5ACD&quot;</span><span class="p">,</span><span class="nx">slategray</span><span class="o">:</span><span class="s2">&quot;#708090&quot;</span><span class="p">,</span><span class="nx">slategrey</span><span class="o">:</span><span class="s2">&quot;#708090&quot;</span><span class="p">,</span><span class="nx">snow</span><span class="o">:</span><span class="s2">&quot;#FFFAFA&quot;</span><span class="p">,</span><span class="nx">springgreen</span><span class="o">:</span><span class="s2">&quot;#00FF7F&quot;</span><span class="p">,</span><span class="nx">steelblue</span><span class="o">:</span><span class="s2">&quot;#4682B4&quot;</span><span class="p">,</span><span class="nx">tan</span><span class="o">:</span><span class="s2">&quot;#D2B48C&quot;</span><span class="p">,</span><span class="nx">thistle</span><span class="o">:</span><span class="s2">&quot;#D8BFD8&quot;</span><span class="p">,</span><span class="nx">tomato</span><span class="o">:</span><span class="s2">&quot;#FF6347&quot;</span><span class="p">,</span><span class="nx">turquoise</span><span class="o">:</span><span class="s2">&quot;#40E0D0&quot;</span><span class="p">,</span><span class="nx">violet</span><span class="o">:</span><span class="s2">&quot;#EE82EE&quot;</span><span class="p">,</span><span class="nx">wheat</span><span class="o">:</span><span class="s2">&quot;#F5DEB3&quot;</span><span class="p">,</span><span class="nx">whitesmoke</span><span class="o">:</span><span class="s2">&quot;#F5F5F5&quot;</span><span class="p">,</span><span class="nx">yellowgreen</span><span class="o">:</span><span class="s2">&quot;#9ACD32&quot;</span><span class="p">},</span></div><div class='line' id='LC337'><span class="nx">H</span><span class="o">=</span><span class="p">{},</span><span class="nx">L</span><span class="o">=</span><span class="p">{},</span><span class="nx">$</span><span class="o">=</span><span class="p">{</span><span class="nx">butt</span><span class="o">:</span><span class="s2">&quot;flat&quot;</span><span class="p">,</span><span class="nx">round</span><span class="o">:</span><span class="s2">&quot;round&quot;</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">clearRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="p">.</span><span class="nx">removeNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="o">=</span><span class="p">[]};</span><span class="nx">d</span><span class="p">.</span><span class="nx">moveTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;moveTo&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">currentX_</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">currentY_</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;lineTo&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">currentX_</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">currentY_</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="o">=</span></div><div class='line' id='LC338'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">currentX_</span><span class="o">+</span><span class="mi">2</span><span class="o">/</span><span class="mi">3</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">currentX_</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">currentY_</span><span class="o">+</span><span class="mi">2</span><span class="o">/</span><span class="mi">3</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">currentY_</span><span class="p">)};</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">currentX_</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">currentY_</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="p">},</span><span class="nx">c</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">arc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">c</span><span class="o">*=</span><span class="nx">q</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;at&quot;</span><span class="o">:</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">K</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">J</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">r</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">K</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">r</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">J</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">r</span><span class="p">;</span><span class="nx">k</span><span class="o">!=</span><span class="nx">g</span><span class="o">||</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">k</span><span class="o">+=</span><span class="mf">0.125</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span></div><div class='line' id='LC339'><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">radius</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">xStart</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">yStart</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">xEnd</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">yEnd</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="p">})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">rect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">strokeRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="o">=</span><span class="nx">e</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fillRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span></div><div class='line' id='LC340'><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="o">=</span><span class="nx">e</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="s2">&quot;gradient&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">x0_</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">y0_</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">x1_</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">y1_</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">createRadialGradient</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="s2">&quot;gradientradial&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">x0_</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">y0_</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">r0_</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">x1_</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">y1_</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">r1_</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">drawImage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span></div><div class='line' id='LC341'><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">5</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">y</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span><span class="k">else</span> <span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid number of arguments&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="p">[];</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; &lt;g_vml_:group&quot;</span><span class="p">,</span><span class="s1">&#39; coordsize=&quot;&#39;</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; coordorigin=&quot;0,0&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; style=&quot;width:&#39;</span><span class="p">,</span></div><div class='line' id='LC342'><span class="mi">10</span><span class="p">,</span><span class="s2">&quot;px;height:&quot;</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="s2">&quot;px;position:absolute;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;M11=&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="s2">&quot;M12=&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="s2">&quot;M21=&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="s2">&quot;M22=&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="s2">&quot;Dx=&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">/</span><span class="nx">q</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="s2">&quot;Dy=&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">q</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">w</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;padding:0 &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">/</span><span class="nx">q</span><span class="p">),</span><span class="s2">&quot;px &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">q</span><span class="p">),</span><span class="s2">&quot;px 0;filter:progid:DXImageTransform.Microsoft.Matrix(&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="s2">&quot;, sizingmethod=&#39;clip&#39;);&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;top:&quot;</span><span class="p">,</span></div><div class='line' id='LC343'><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">q</span><span class="p">),</span><span class="s2">&quot;px;left:&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">/</span><span class="nx">q</span><span class="p">),</span><span class="s2">&quot;px;&quot;</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39; &quot;&gt;&#39;</span><span class="p">,</span><span class="s1">&#39;&lt;g_vml_:image src=&quot;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; style=&quot;width:&#39;</span><span class="p">,</span><span class="nx">q</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;px;&quot;</span><span class="p">,</span><span class="s2">&quot; height:&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="s1">&#39;px&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; cropleft=&quot;&#39;</span><span class="p">,</span><span class="nx">r</span><span class="o">/</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; croptop=&quot;&#39;</span><span class="p">,</span><span class="nx">y</span><span class="o">/</span><span class="nx">u</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; cropright=&quot;&#39;</span><span class="p">,(</span><span class="nx">l</span><span class="o">-</span><span class="nx">r</span><span class="o">-</span><span class="nx">n</span><span class="p">)</span><span class="o">/</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; cropbottom=&quot;&#39;</span><span class="p">,(</span><span class="nx">u</span><span class="o">-</span><span class="nx">y</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">/</span><span class="nx">u</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s2">&quot; /&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/g_vml_:group&gt;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">insertAdjacentHTML</span><span class="p">(</span><span class="s2">&quot;BeforeEnd&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))};</span><span class="nx">d</span><span class="p">.</span><span class="nx">stroke</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;g_vml_:shape&quot;</span><span class="p">,</span><span class="s1">&#39; filled=&quot;&#39;</span><span class="p">,</span><span class="o">!!</span><span class="nx">a</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; style=&quot;position:absolute;width:&#39;</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="s2">&quot;px;height:&quot;</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="s1">&#39;px;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; coordorigin=&quot;0,0&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; coordsize=&quot;&#39;</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span></div><div class='line' id='LC344'><span class="s1">&#39; stroked=&quot;&#39;</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; path=&quot;&#39;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;moveTo&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; m &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;lineTo&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; l &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;close&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; x &quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;bezierCurveTo&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; c &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">cp1x</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">cp1y</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">cp2x</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">cp2y</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;at&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;wa&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="o">*</span><span class="nx">f</span><span class="p">.</span><span class="nx">radius</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="o">*</span></div><div class='line' id='LC345'><span class="nx">f</span><span class="p">.</span><span class="nx">radius</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="o">*</span><span class="nx">f</span><span class="p">.</span><span class="nx">radius</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="o">*</span><span class="nx">f</span><span class="p">.</span><span class="nx">radius</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">xStart</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">yStart</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">xEnd</span><span class="p">),</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">yEnd</span><span class="p">))}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39; &quot;&gt;&#39;</span><span class="p">);</span><span class="nx">a</span><span class="o">?</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;/g_vml_:shape&gt;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">insertAdjacentHTML</span><span class="p">(</span><span class="s2">&quot;beforeEnd&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fill</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">closePath</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPath_</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;close&quot;</span><span class="p">})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">save</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC346'><span class="p">{};</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">aStack_</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">mStack_</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">D</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">restore</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">aStack_</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">aStack_</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mStack_</span><span class="p">.</span><span class="nx">pop</span><span class="p">())};</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">([[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleX_</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">arcScaleY_</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">([[</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">([[</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC347'><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">setTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,[[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">drawText_</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">m_</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">1</span><span class="nx">E3</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="nx">h</span><span class="o">=</span><span class="nx">L</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">l</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">u</span><span class="p">){}</span><span class="nx">h</span><span class="o">=</span><span class="nx">L</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">fontStyle</span><span class="o">||</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">variant</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">fontVariant</span><span class="o">||</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">weight</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">fontWeight</span><span class="o">||</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">||</span><span class="mi">10</span><span class="p">,</span><span class="nx">family</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">fontFamily</span><span class="o">||</span><span class="s2">&quot;sans-serif&quot;</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span> <span class="k">in</span> <span class="nx">l</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="nx">p</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">);</span></div><div class='line' id='LC348'><span class="nx">m</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="o">:-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">m</span><span class="o">:-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;em&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">p</span><span class="o">*</span><span class="nx">m</span><span class="o">:-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;%&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">p</span><span class="o">/</span><span class="mi">100</span><span class="o">*</span><span class="nx">m</span><span class="o">:-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">size</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;pt&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">m</span><span class="o">/</span><span class="mf">0.75</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">*=</span><span class="mf">0.981</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">style</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">variant</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">weight</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">family</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">switch</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;end&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;ltr&quot;</span><span class="o">==</span><span class="nx">m</span><span class="p">.</span><span class="nx">direction</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;start&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;rtl&quot;</span><span class="o">==</span><span class="nx">m</span><span class="p">.</span><span class="nx">direction</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span></div><div class='line' id='LC349'><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;hanging&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="nx">t</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="mf">1.75</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;middle&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">case</span> <span class="kc">null</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;alphabetic&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;ideographic&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="nx">t</span><span class="o">=-</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="mf">2.25</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="nx">E3</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="mf">0.05</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="o">=</span><span class="mi">500</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="nx">t</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;g_vml_:line from=&quot;&#39;</span><span class="p">,</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="s1">&#39; 0&quot; to=&quot;&#39;</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="s1">&#39; 0.05&quot; &#39;</span><span class="p">,</span><span class="s1">&#39; coordsize=&quot;100 100&quot; coordorigin=&quot;0 0&quot;&#39;</span><span class="p">,</span><span class="s1">&#39; filled=&quot;&#39;</span><span class="p">,</span><span class="o">!</span><span class="nx">e</span><span class="p">,</span><span class="s1">&#39;&quot; stroked=&quot;&#39;</span><span class="p">,</span><span class="o">!!</span><span class="nx">e</span><span class="p">,</span><span class="s1">&#39;&quot; style=&quot;position:absolute;width:1px;height:1px;&quot;&gt;&#39;</span><span class="p">);</span><span class="nx">e</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">,{</span><span class="nx">x</span><span class="o">:-</span><span class="nx">d</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span></div><div class='line' id='LC350'><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">size</span><span class="p">});</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">].</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">].</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,0,0&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">/</span><span class="nx">q</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">q</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;g_vml_:skew on=&quot;t&quot; matrix=&quot;&#39;</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="s1">&#39;&quot; &#39;</span><span class="p">,</span><span class="s1">&#39; offset=&quot;&#39;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s1">&#39;&quot; origin=&quot;&#39;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s1">&#39; 0&quot; /&gt;&#39;</span><span class="p">,</span><span class="s1">&#39;&lt;g_vml_:path textpathok=&quot;true&quot; /&gt;&#39;</span><span class="p">,</span><span class="s1">&#39;&lt;g_vml_:textpath on=&quot;true&quot; string=&quot;&#39;</span><span class="p">,</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s1">&#39;&quot; style=&quot;v-text-align:&#39;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;;font:&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="s1">&#39;&quot; /&gt;&lt;/g_vml_:line&gt;&#39;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">insertAdjacentHTML</span><span class="p">(</span><span class="s2">&quot;beforeEnd&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fillText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">drawText_</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">strokeText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC351'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">drawText_</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">measureText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">insertAdjacentHTML</span><span class="p">(</span><span class="s2">&quot;beforeEnd&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;span style=&quot;position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;&quot;&gt;&lt;/span&gt;&#39;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element_</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">textMeasureEl_</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">clip</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span></div><div class='line' id='LC352'><span class="nx">d</span><span class="p">.</span><span class="nx">arcTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">d</span><span class="p">.</span><span class="nx">createPattern</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addColorStop</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">colors_</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">offset</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">alpha</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">alpha</span><span class="p">})};</span><span class="nx">d</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nb">Error</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">INDEX_SIZE_ERR</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">DOMSTRING_SIZE_ERR</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">HIERARCHY_REQUEST_ERR</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">WRONG_DOCUMENT_ERR</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">INVALID_CHARACTER_ERR</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">NO_DATA_ALLOWED_ERR</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">NO_MODIFICATION_ALLOWED_ERR</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">NOT_FOUND_ERR</span><span class="o">=</span><span class="mi">8</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">NOT_SUPPORTED_ERR</span><span class="o">=</span><span class="mi">9</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">INUSE_ATTRIBUTE_ERR</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">INVALID_STATE_ERR</span><span class="o">=</span><span class="mi">11</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">SYNTAX_ERR</span><span class="o">=</span><span class="mi">12</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">INVALID_MODIFICATION_ERR</span><span class="o">=</span></div><div class='line' id='LC353'><span class="mi">13</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">NAMESPACE_ERR</span><span class="o">=</span><span class="mi">14</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">INVALID_ACCESS_ERR</span><span class="o">=</span><span class="mi">15</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">VALIDATION_ERR</span><span class="o">=</span><span class="mi">16</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">TYPE_MISMATCH_ERR</span><span class="o">=</span><span class="mi">17</span><span class="p">;</span><span class="nx">G_vmlCanvasManager</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="nx">CanvasRenderingContext2D</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">CanvasGradient</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="nx">CanvasPattern</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="nx">DOMException</span><span class="o">=</span><span class="nx">A</span><span class="p">}();</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="1.05067s from github-fe138-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

